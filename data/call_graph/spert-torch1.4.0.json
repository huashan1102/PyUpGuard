{"torch.nn.functional.sigmoid": ["warnings.warn"], "torch.onnx.symbolic_opset8.ones": ["torch.onnx.symbolic_opset8._constant_fill"], "torch.nn.modules.linear.Linear.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.linear.Linear.reset_parameters"], "torch.cuda.is_available": ["<builtin>.hasattr", "torch._C._cuda_isDriverSufficient", "torch._C._cuda_getDeviceCount"], "torch.cuda.device.__init__": ["torch.cuda._utils._get_device_index"], "torch.onnx.symbolic_opset8.zeros": ["torch.onnx.symbolic_opset8._constant_fill"], "torch.random.manual_seed": ["<builtin>.int", "torch._C.default_generator.manual_seed"], "torch.distributions.constraints._Cat.__init__": ["<builtin>.all", "<builtin>.isinstance", "<builtin>.list", "<builtin>.len"], "torch.nn.utils.clip_grad.clip_grad_norm_": ["<builtin>.isinstance", "<builtin>.list", "<builtin>.filter", "<builtin>.float", "<builtin>.max"], "torch.nn.functional.softmax": ["torch.nn.functional._get_softmax_dim"], "torch.serialization.save": ["torch.serialization._open_zipfile_writer", "torch.serialization._save", "torch.serialization._open_file_like", "torch.serialization._legacy_save"], "torch.cuda.random.manual_seed_all": ["<builtin>.int", "<builtin>.range", "torch.cuda.device_count", "torch.cuda._lazy_call"], "torch.nn.modules.dropout.Dropout.__default_init__": ["torch.nn.modules.dropout._DropoutNd.__init__", "torch.nn.modules.module.Module.__init__"], "torch.distributed.distributed_c10d.gather": ["torch.distributed.distributed_c10d._check_single_tensor", "torch.distributed.distributed_c10d._check_tensor_list", "torch.distributed.distributed_c10d._rank_not_in_group", "torch.distributed.distributed_c10d.get_rank", "<builtin>.ValueError", "torch.distributed.distributed_c10d._check_default_pg", "torch.distributed.distributed_c10d._get_group_rank"], "torch.nn.parallel.data_parallel.DataParallel.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.list", "<builtin>.range", "<builtin>.map", "torch.cuda._utils._get_device_index", "torch.nn.parallel.data_parallel._check_balance", "<builtin>.len"], "torch.nn.parallel.data_parallel.DataParallel.gather": ["torch.nn.parallel.scatter_gather.gather"], "torch.nn.parallel.distributed.DistributedDataParallel.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.any", "<builtin>.len", "<builtin>.all", "<builtin>.list", "torch.cuda._utils._get_device_index", "<builtin>.map", "<builtin>.range", "torch.distributed.distributed_c10d._get_default_group", "<builtin>.int", "torch.nn.parallel.distributed.DistributedDataParallel._distributed_broadcast_coalesced", "torch.nn.parallel.distributed.DistributedDataParallel._ddp_init_helper"], "torch.nn.parallel.distributed.DistributedDataParallel.gather": ["torch.nn.parallel.scatter_gather.gather"], "torch.nn.parallel.scatter_gather.gather": ["<builtin>.isinstance", "<builtin>.type", "<builtin>.map", "<builtin>.all", "<builtin>.ValueError", "<builtin>.zip", "<builtin>.len"], "torch.onnx.symbolic_opset11.gather": ["torch.onnx.symbolic_helper._maybe_get_const", "torch.onnx.symbolic_helper._unimplemented"], "torch.onnx.symbolic_opset9.gather": ["torch.onnx.symbolic_helper._maybe_get_const", "torch.onnx.symbolic_helper._unimplemented", "torch.onnx.symbolic_opset9.size"], "torch.nn.modules.loss.BCEWithLogitsLoss.__init__": ["torch.nn.modules.loss._Loss.__init__", "<builtin>.super", "torch.nn.modules.module.Module.register_buffer"], "torch.distributions.constraints._Stack.__init__": ["<builtin>.all", "<builtin>.isinstance", "<builtin>.list"], "torch.cuda.device_count": ["torch.cuda.is_available", "torch._C._cuda_getDeviceCount"], "torch.nn.modules.loss.CrossEntropyLoss.__init__": ["torch.nn.modules.loss._WeightedLoss.__init__", "<builtin>.super"], "torch.nn.modules.sparse.Embedding.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.sparse.Embedding.reset_parameters", "<builtin>.list"], "torch.serialization.load": ["torch.serialization._open_file_like", "torch.serialization._is_zipfile", "torch.serialization._legacy_load", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._load"], "torch.utils.data.dataloader.DataLoader.__init__": ["<builtin>.ValueError", "<builtin>.isinstance", "torch.utils.data.dataloader._InfiniteConstantSampler.__init__"], "torch.onnx.symbolic_opset8._constant_fill": ["torch.onnx.symbolic_helper._cast_func_template"], "torch.nn.modules.module.Module.__init__": ["collections.OrderedDict"], "torch.nn.modules.module.Module.register_parameter": ["<builtin>.AttributeError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.KeyError", "torch.typename", "<builtin>.hasattr", "<builtin>.ValueError"], "torch.nn.modules.linear.Linear.reset_parameters": ["torch.nn.init.kaiming_uniform_", "math.sqrt", "torch.nn.init._calculate_fan_in_and_fan_out", "torch.nn.init.uniform_"], "torch.cuda._utils._get_device_index": ["<builtin>.isinstance", "<builtin>.ValueError"], "torch.nn.functional._get_softmax_dim": ["warnings.warn"], "torch.serialization._open_zipfile_writer": ["torch.serialization._is_path"], "torch.serialization._save": ["torch.is_storage", "torch.serialization.normalize_storage_type", "<builtin>.str", "torch.serialization.location_tag", "<builtin>.type", "io.BytesIO", "<builtin>.len", "<builtin>.sorted"], "torch.serialization._open_file_like": ["torch.serialization._is_path", "torch.serialization._open_file.__init__", "torch.serialization._open_buffer_writer.__default_init__", "torch.serialization._open_buffer_reader.__init__", "<builtin>.RuntimeError"], "torch.serialization._legacy_save": ["<builtin>.isinstance", "<builtin>.RuntimeError", "<builtin>.issubclass", "torch.is_storage", "torch._utils_internal.get_source_lines_and_file", "torch.serialization.normalize_storage_type", "<builtin>.str", "torch.serialization.location_tag", "warnings.warn", "<builtin>.type", "<builtin>.dict", "<builtin>.sorted", "torch.serialization._should_read_directly"], "torch.cuda._lazy_call": ["torch.cuda.is_initialized", "<builtin>.callable", "traceback.format_stack"], "torch.nn.modules.dropout._DropoutNd.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.ValueError"], "torch.distributed.distributed_c10d._check_single_tensor": ["<builtin>.isinstance", "<builtin>.RuntimeError"], "torch.distributed.distributed_c10d._check_tensor_list": ["<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.all"], "torch.distributed.distributed_c10d.get_rank": ["torch.distributed.distributed_c10d._rank_not_in_group", "torch.distributed.distributed_c10d._check_default_pg", "torch.distributed.distributed_c10d._get_group_rank"], "torch.distributed.distributed_c10d._get_group_rank": ["<builtin>.RuntimeError"], "torch.nn.parallel.data_parallel._check_balance": ["<builtin>.list", "<builtin>.map", "torch.cuda._utils._get_device_index", "<builtin>.min", "<builtin>.max", "<builtin>.enumerate", "warnings.warn", "operator.itemgetter"], "torch.distributed.distributed_c10d._get_default_group": ["torch.distributed.distributed_c10d.is_initialized", "<builtin>.RuntimeError"], "torch.nn.parallel.distributed.DistributedDataParallel._ddp_init_helper": ["torch.nn.parallel.replicate.replicate", "<builtin>.len", "<builtin>.zip", "<builtin>.list", "<builtin>.filter", "<builtin>.isinstance", "<builtin>.reversed", "torch.nn.parallel.distributed.DistributedDataParallel._passing_sync_batchnorm_handle"], "torch.onnx.symbolic_helper._maybe_get_const": ["torch.onnx.symbolic_helper._is_value", "torch.onnx.symbolic_helper._parse_arg"], "torch.onnx.symbolic_helper._unimplemented": ["warnings.warn"], "torch.onnx.symbolic_opset9.size": ["torch.onnx.symbolic_helper._maybe_get_const", "torch.onnx.symbolic_helper._size_helper"], "torch.nn.modules.loss._Loss.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn._reduction.legacy_get_string"], "torch.nn.modules.module.Module.register_buffer": ["<builtin>.AttributeError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.KeyError", "torch.typename", "<builtin>.hasattr"], "torch.nn.modules.loss._WeightedLoss.__init__": ["torch.nn.modules.loss._Loss.__init__", "<builtin>.super", "torch.nn.modules.module.Module.register_buffer"], "torch.nn.modules.sparse.Embedding.reset_parameters": ["torch.nn.init.normal_"], "torch.serialization._is_zipfile": ["<builtin>.len", "<builtin>.zip", "<builtin>.ord"], "torch.serialization._legacy_load": ["torch.serialization._get_restore_location", "warnings.warn", "difflib.unified_diff", "torch.typename", "torch._utils_internal.get_source_lines_and_file", "<builtin>.open", "<builtin>.len", "<builtin>.isinstance", "contextlib.closing", "torch.serialization.mkdtemp", "<builtin>.all", "<builtin>.int", "tarfile.open", "<builtin>.range", "os.path.join", "torch.serialization.storage_to_tensor_type", "struct.unpack", "torch.serialization._maybe_decode_ascii", "<builtin>.RuntimeError", "torch.serialization._check_seekable", "torch.serialization._should_read_directly", "torch.serialization._is_zipfile"], "torch.serialization._open_zipfile_reader.__init__": ["<builtin>.super"], "torch.serialization._load": ["torch.serialization._get_restore_location", "struct.pack", "io.BytesIO", "<builtin>.isinstance", "torch.serialization._maybe_decode_ascii"], "torch.utils.data.dataloader._InfiniteConstantSampler.__init__": ["<builtin>.super"], "torch": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.type"], "torch.nn.init.kaiming_uniform_": ["torch.nn.init._calculate_correct_fan", "torch.nn.init.calculate_gain", "math.sqrt"], "torch.nn.init._calculate_fan_in_and_fan_out": ["<builtin>.ValueError"], "torch.nn.init.uniform_": ["torch.nn.init._no_grad_uniform_"], "torch.serialization._is_path": ["<builtin>.isinstance"], "torch.serialization.normalize_storage_type": ["<builtin>.getattr"], "torch.serialization.location_tag": ["<builtin>.RuntimeError", "torch.typename"], "torch.serialization._open_file.__init__": ["<builtin>.open", "<builtin>.super"], "torch.serialization._open_buffer_writer.__default_init__": ["torch.serialization._opener.__init__"], "torch.serialization._open_buffer_reader.__init__": ["torch.serialization._opener.__init__", "<builtin>.super", "torch.serialization._check_seekable"], "torch._utils_internal.get_source_lines_and_file": ["inspect.getsourcefile", "inspect.getsourcelines", "<builtin>.OSError"], "torch.serialization._should_read_directly": ["torch.serialization._is_compressed_file"], "torch.nn.parallel.replicate.replicate": ["torch.nn.parallel.replicate._replicatable_module", "<builtin>.RuntimeError", "<builtin>.list", "<builtin>.map", "torch.cuda._utils._get_device_index", "<builtin>.len", "<builtin>.enumerate", "torch.nn.parallel.replicate._broadcast_coalesced_reshape", "<builtin>.range", "torch.nn.parallel.replicate._is_script_module", "<builtin>.setattr", "torch.nn.parameter.Parameter.__new__"], "torch.nn.parallel.distributed.DistributedDataParallel._passing_sync_batchnorm_handle": ["<builtin>.enumerate", "<builtin>.isinstance", "<builtin>.len"], "torch.onnx.symbolic_helper._is_value": ["<builtin>.isinstance"], "torch.onnx.symbolic_helper._parse_arg": ["torch.onnx.symbolic_helper._is_value", "<builtin>.int", "<builtin>.float", "<builtin>.RuntimeError", "<builtin>.bool", "<builtin>.str"], "torch.onnx.symbolic_helper._size_helper": ["torch.onnx.symbolic_opset9.select"], "torch.nn._reduction.legacy_get_string": ["warnings.warn"], "torch.nn.init.normal_": ["torch.nn.init._no_grad_normal_"], "torch.serialization._get_restore_location": ["<builtin>.isinstance", "torch.serialization.default_restore_location", "<builtin>.str"], "torch.serialization.mkdtemp": ["tempfile.mkdtemp", "shutil.rmtree"], "torch.serialization.storage_to_tensor_type": ["<builtin>.type", "torch._utils._import_dotted_name", "<builtin>.getattr"], "torch.serialization._maybe_decode_ascii": ["<builtin>.isinstance"], "torch.serialization._check_seekable": ["<builtin>.str", "<builtin>.type"], "torch.nn.init._calculate_correct_fan": ["<builtin>.ValueError", "torch.nn.init._calculate_fan_in_and_fan_out"], "torch.nn.init.calculate_gain": ["math.sqrt", "<builtin>.ValueError", "<builtin>.isinstance"], "torch.nn.parallel.replicate._replicatable_module": ["<builtin>.next", "torch.nn.parallel.replicate._is_jit_enabled", "<builtin>.set", "torch.nn.parallel.replicate._is_script_module", "<builtin>.all", "torch.nn.parallel.replicate._replicatable_module"], "torch.nn.parallel.replicate._broadcast_coalesced_reshape": ["torch.cuda.comm.broadcast_coalesced", "<builtin>.len", "<builtin>.range"], "torch.nn.parallel.replicate._is_script_module": ["<builtin>.isinstance"], "torch.onnx.symbolic_opset9.select": ["torch.onnx.symbolic_helper._maybe_get_scalar", "torch.onnx.symbolic_helper._slice_helper", "torch.onnx.symbolic_helper._is_value"], "torch.serialization.default_restore_location": ["<builtin>.RuntimeError", "torch.typename"], "torch._utils._import_dotted_name": ["<builtin>.__import__", "<builtin>.getattr"], "torch.onnx.symbolic_helper._maybe_get_scalar": ["torch.onnx.symbolic_helper._maybe_get_const", "<builtin>.isinstance"], "torch.onnx.symbolic_helper._slice_helper": ["torch.onnx.symbolic_opset9._slice", "torch.onnx.symbolic_opset10._slice"], "torch.onnx.symbolic_opset9._slice": ["<builtin>.len"], "torch.onnx.symbolic_opset10._slice": ["<builtin>.len"]}