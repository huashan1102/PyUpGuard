{"numpy.ma.core._MaskedUnaryOperation.__init__": ["numpy.ma.core._MaskedUFunc.__init__", "<builtin>.super"], "numpy.lib.function_base.angle": ["numpy.core._asarray.asanyarray", "<builtin>.issubclass"], "numpy.lib.function_base.unwrap": ["numpy.core._asarray.asarray", "numpy.lib.function_base.diff", "<builtin>.slice", "<builtin>.tuple", "<builtin>.abs", "numpy.core.defchararray.array"], "numpy.ma.core._convert2ma.__init__": ["<builtin>.getattr", "numpy.ma.core._convert2ma.getdoc"], "numpy.core.numeric.rollaxis": ["numpy.core._exceptions.AxisError.__init__", "<builtin>.list", "<builtin>.range"], "numpy.core.multiarray.concatenate": ["<builtin>.list"], "numpy.lib.scimath.sqrt": ["numpy.lib.scimath._fix_real_lt_zero"], "numpy.lib.type_check.iscomplexobj": ["numpy.core._asarray.asarray", "<builtin>.issubclass"], "numpy.core.fromnumeric.sort": ["numpy.core._asarray.asanyarray"], "numpy.core.fromnumeric.any": ["numpy.core.fromnumeric._wrapreduction"], "numpy.core.fromnumeric.reshape": ["numpy.core.fromnumeric._wrapfunc"], "numpy.core.fromnumeric.take": ["numpy.core.fromnumeric._wrapfunc"], "numpy.core.fromnumeric.transpose": ["numpy.core.fromnumeric._wrapfunc"], "numpy.lib.shape_base.expand_dims": ["<builtin>.isinstance", "numpy.core._asarray.asarray", "numpy.core._asarray.asanyarray", "<builtin>.type", "<builtin>.len", "numpy.core.numeric.normalize_axis_tuple", "<builtin>.iter", "<builtin>.next", "<builtin>.range"], "numpy.lib.arraysetops.unique": ["numpy.lib.arraysetops._unique1d", "numpy.lib.arraysetops._unpack_tuple", "<builtin>.range", "<builtin>.TypeError", "<builtin>.len"], "numpy.core.numeric.ones": ["numpy.core.multiarray.copyto"], "numpy.core.fromnumeric.mean": ["<builtin>.type", "numpy.core.fromnumeric.mean", "numpy.core._methods._mean"], "numpy.lib.stride_tricks.as_strided": ["<builtin>.dict", "<builtin>.tuple", "numpy.lib.stride_tricks.DummyArray.__init__", "numpy.lib.stride_tricks._maybe_view_as_subclass"], "numpy.lib.function_base.diff": ["<builtin>.ValueError", "<builtin>.repr", "numpy.core._asarray.asanyarray", "<builtin>.list", "<builtin>.tuple", "<builtin>.len", "<builtin>.slice", "<builtin>.range"], "numpy.core.defchararray.array": ["<builtin>.isinstance", "numpy.core.defchararray.chararray.__new__", "<builtin>.len", "<builtin>.issubclass", "<builtin>.int"], "numpy.ma.core._convert2ma.getdoc": ["<builtin>.getattr", "numpy.ma.core.get_object_signature"], "numpy.core._exceptions.AxisError.__init__": ["<builtin>.super"], "numpy.lib.scimath._fix_real_lt_zero": ["numpy.core._asarray.asarray", "numpy.core.fromnumeric.any", "numpy.lib.scimath._tocomplex", "numpy.lib.type_check.isreal"], "numpy.core.fromnumeric._wrapreduction": ["<builtin>.type", "<builtin>.getattr"], "numpy.core.fromnumeric._wrapfunc": ["<builtin>.getattr", "numpy.core.fromnumeric._wrapit"], "numpy.core.numeric.normalize_axis_tuple": ["<builtin>.type", "operator.index", "<builtin>.tuple", "<builtin>.len", "<builtin>.ValueError", "<builtin>.set"], "numpy.lib.arraysetops._unpack_tuple": ["<builtin>.len"], "numpy.core._methods._mean": ["numpy.core._asarray.asanyarray", "numpy.core._methods._count_reduce_items", "warnings.warn", "<builtin>.issubclass", "<builtin>.isinstance", "<builtin>.hasattr"], "numpy.lib.stride_tricks._maybe_view_as_subclass": ["<builtin>.type"], "numpy.core.defchararray.chararray.__new__": ["<builtin>.int", "<builtin>.isinstance"], "numpy.ma.core.get_object_signature": ["numpy.compat._inspect.formatargspec", "numpy.compat._inspect.getargspec"], "numpy.lib.scimath._tocomplex": ["<builtin>.issubclass"], "numpy.lib.type_check.isreal": ["numpy.lib.type_check.imag"], "numpy.core.fromnumeric._wrapit": ["<builtin>.getattr", "numpy.core._asarray.asarray", "<builtin>.isinstance"], "numpy.core._methods._count_reduce_items": ["<builtin>.tuple", "<builtin>.range", "<builtin>.isinstance"], "numpy.compat._inspect.formatargspec": ["<builtin>.len", "<builtin>.range", "numpy.compat._inspect.strseq"], "numpy.compat._inspect.getargspec": ["numpy.compat._inspect.ismethod", "numpy.compat._inspect.isfunction", "<builtin>.TypeError", "numpy.compat._inspect.getargs"], "numpy.lib.type_check.imag": ["numpy.core._asarray.asanyarray"], "numpy.compat._inspect.strseq": ["<builtin>.type", "numpy.compat._inspect.strseq"], "numpy.compat._inspect.ismethod": ["<builtin>.isinstance"], "numpy.compat._inspect.isfunction": ["<builtin>.isinstance"], "numpy.compat._inspect.getargs": ["numpy.compat._inspect.iscode", "<builtin>.TypeError", "<builtin>.list", "<builtin>.range"], "numpy.compat._inspect.iscode": ["<builtin>.isinstance"]}