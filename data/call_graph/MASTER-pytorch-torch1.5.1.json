{"torch.nn.modules.normalization.LayerNorm.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.isinstance", "<builtin>.tuple", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.normalization.LayerNorm.reset_parameters"], "torch._linalg_utils.matmul": ["torch._linalg_utils.is_sparse"], "torch.onnx.symbolic_opset8.matmul": ["torch.onnx.symbolic_opset8.bmm"], "torch.utils.data.dataloader.DataLoader.__init__": ["<builtin>.ValueError", "<builtin>.isinstance", "torch.utils.data.dataloader._InfiniteConstantSampler.__init__"], "torch.testing._internal.hypothesis_utils.tensor": ["<builtin>.isinstance", "hypothesis.strategies.sampled_from", "hypothesis.assume", "torch.testing._internal.hypothesis_utils.floats", "hypothesis.extra.numpy.arrays", "numpy.isnan", "numpy.isinf", "torch.testing._internal.hypothesis_utils._get_valid_min_max", "torch.testing._internal.common_quantized._calculate_dynamic_qparams"], "torch.nn.modules.batchnorm.SyncBatchNorm.convert_sync_batchnorm": ["<builtin>.isinstance"], "torch.cuda.device.__init__": ["torch.cuda._utils._get_device_index"], "torch.distributed.distributed_c10d.all_reduce": ["torch.distributed.distributed_c10d._check_single_tensor", "torch.distributed.distributed_c10d._rank_not_in_group", "torch.distributed.distributed_c10d._check_default_pg"], "torch.jit.load": ["<builtin>.isinstance", "os.path.isdir", "os.path.exists", "<builtin>.ValueError", "<builtin>.str", "<builtin>.type", "torch.serialization.validate_cuda_device", "torch._C.CompilationUnit", "torch._C.import_ir_module", "torch._C.import_ir_module_from_buffer", "torch.jit._recursive.wrap_cpp_module"], "torch.cuda.set_device": ["torch.cuda._utils._get_device_index", "torch._C._cuda_setDevice"], "torch.jit.trace": ["warnings.warn", "<builtin>.isinstance", "torch.jit.trace_module", "torch.jit.wrap_check_inputs", "<builtin>.hasattr", "<builtin>.tuple", "torch.jit._create_interpreter_name_lookup_fn", "<builtin>.AttributeError", "torch._jit_internal._qualified_name", "torch._C._create_function_from_trace", "torch.jit._check_trace"], "torch.onnx.symbolic_opset8.zeros": ["torch.onnx.symbolic_opset8._constant_fill"], "torch.onnx.symbolic_opset11.arange": ["torch.onnx.symbolic_helper._maybe_get_const", "<builtin>.len", "torch.onnx.symbolic_helper._arange_cast_helper", "<builtin>.NotImplementedError", "<builtin>.str"], "torch.onnx.symbolic_opset9.arange": ["torch.onnx.symbolic_helper._maybe_get_const", "torch.onnx.symbolic_helper._is_value", "<builtin>.len", "torch.onnx.symbolic_opset9.nonzero", "torch.onnx.symbolic_opset9.ones", "<builtin>.NotImplementedError", "<builtin>.str"], "torch.nn.modules.activation.ReLU.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.distributed.distributed_c10d.get_backend": ["torch.distributed.distributed_c10d._check_default_pg", "torch.distributed.distributed_c10d._rank_not_in_group", "<builtin>.RuntimeError"], "torch.cuda.is_available": ["<builtin>.hasattr", "torch._C._cuda_isDriverSufficient", "torch._C._cuda_getDeviceCount"], "torch.onnx.symbolic_opset9.randn": ["torch.onnx.symbolic_helper._get_const", "torch.onnx.symbolic_helper._is_packed_list"], "torch.nn.modules.batchnorm.BatchNorm2d.__default_init__": ["torch.nn.modules.batchnorm._BatchNorm.__init__", "torch.nn.modules.batchnorm._NormBase.__init__"], "torch.distributed.distributed_c10d.barrier": ["torch.distributed.distributed_c10d._rank_not_in_group", "torch.distributed.distributed_c10d._check_default_pg"], "torch.cuda.memory.empty_cache": ["torch.cuda.is_initialized"], "torch.nn.modules.container.ModuleList.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.nn.modules.activation.Softmax.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.nn.modules.sparse.Embedding.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.sparse.Embedding.reset_parameters", "<builtin>.list"], "torch.nn.modules.linear.Linear.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.linear.Linear.reset_parameters"], "torch.onnx.symbolic_opset9.multinomial": ["torch.onnx.symbolic_helper._unimplemented", "torch.onnx.symbolic_helper._is_none", "torch.onnx.symbolic_opset9.log"], "torch.nn.functional.softmax": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "<builtin>.type", "torch.nn.functional._get_softmax_dim"], "torch.nn.modules.container.Sequential.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.isinstance", "<builtin>.enumerate", "<builtin>.len", "torch.nn.modules.module.Module.add_module", "<builtin>.str"], "torch.distributed.distributed_c10d.get_rank": ["torch.distributed.distributed_c10d._rank_not_in_group", "torch.distributed.distributed_c10d._check_default_pg", "torch.distributed.distributed_c10d._get_group_rank"], "torch.onnx.symbolic_opset7.max": ["warnings.warn", "torch.onnx.symbolic_opset9.max"], "torch.onnx.symbolic_opset9.max": ["torch.onnx.symbolic_helper._get_const"], "torch.nn.parallel.distributed.DistributedDataParallel.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.any", "<builtin>.len", "<builtin>.all", "<builtin>.list", "torch.cuda._utils._get_device_index", "<builtin>.map", "<builtin>.range", "torch.distributed.distributed_c10d._get_default_group", "<builtin>.int", "torch.nn.parallel.distributed.DistributedDataParallel._distributed_broadcast_coalesced", "torch.nn.parallel.distributed.DistributedDataParallel._ddp_init_helper"], "torch.nn.modules.dropout.Dropout.__default_init__": ["torch.nn.modules.dropout._DropoutNd.__init__", "torch.nn.modules.module.Module.__init__"], "torch.onnx.symbolic_opset8.ones": ["torch.onnx.symbolic_opset8._constant_fill"], "torch.serialization.load": ["torch.serialization._check_dill_version", "torch.serialization._open_file_like", "torch.serialization._is_zipfile", "torch.serialization._legacy_load", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._is_torchscript_zip", "torch.serialization._load", "warnings.warn"], "torch.nn.modules.conv.Conv2d.__init__": ["torch.nn.modules.utils._ntuple", "<builtin>.super"], "torch.cuda.random.manual_seed_all": ["<builtin>.int", "<builtin>.range", "torch.cuda.device_count", "torch.cuda._lazy_call"], "torch.distributions.constraints._Stack.__init__": ["<builtin>.all", "<builtin>.isinstance", "<builtin>.list"], "torch.nn.modules.pooling.AdaptiveAvgPool2d.__default_init__": ["torch.nn.modules.pooling._AdaptiveAvgPoolNd.__init__", "torch.nn.modules.module.Module.__init__"], "torch.distributed.distributed_c10d.get_world_size": ["torch.distributed.distributed_c10d._rank_not_in_group", "torch.distributed.distributed_c10d._get_group_size"], "torch.serialization.save": ["torch.serialization._check_dill_version", "torch.serialization._open_zipfile_writer", "torch.serialization._save", "torch.serialization._open_file_like", "torch.serialization._legacy_save"], "torch.distributed.distributed_c10d.destroy_process_group": ["<builtin>.RuntimeError"], "torch.distributed.distributed_c10d.init_process_group": ["<builtin>.isinstance", "<builtin>.RuntimeError", "torch.distributed.distributed_c10d.Backend.__new__", "torch.distributed.distributed_c10d._new_process_group_helper", "torch.distributed.rendezvous.rendezvous", "<builtin>.next", "<builtin>.range"], "torch.nn.modules.pooling.MaxPool2d.__default_init__": ["torch.nn.modules.pooling._MaxPoolNd.__init__", "torch.nn.modules.module.Module.__init__"], "torch.nn.functional.sigmoid": ["warnings.warn"], "torch.jit.save": ["<builtin>.isinstance"], "torch.cuda.device_count": ["torch.cuda.is_available", "torch._C._cuda_getDeviceCount"], "torch.cuda.random.manual_seed": ["<builtin>.int", "torch.cuda.current_device", "torch.cuda._lazy_call"], "torch.random.manual_seed": ["<builtin>.int", "torch._C.default_generator.manual_seed"], "torch.utils.data.dataset.ConcatDataset.__init__": ["<builtin>.super", "<builtin>.len", "<builtin>.list", "<builtin>.isinstance", "torch.utils.data.dataset.ConcatDataset.cumsum"], "torch.distributions.constraints._Cat.__init__": ["<builtin>.all", "<builtin>.isinstance", "<builtin>.list", "<builtin>.len"], "torch.nn.modules.module.Module.__init__": ["collections.OrderedDict"], "torch.nn.modules.module.Module.register_parameter": ["<builtin>.AttributeError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.KeyError", "torch.typename", "<builtin>.hasattr", "<builtin>.ValueError"], "torch.nn.modules.normalization.LayerNorm.reset_parameters": ["torch.nn.init.ones_", "torch.nn.init.zeros_"], "torch._linalg_utils.is_sparse": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.type"], "torch.onnx.symbolic_opset8.bmm": ["torch.onnx.symbolic_helper._try_get_scalar_type", "torch.onnx.symbolic_opset8._try_cast_integer_to_float", "torch.onnx.symbolic_opset8._cast_to_type"], "torch.utils.data.dataloader._InfiniteConstantSampler.__init__": ["<builtin>.super"], "torch.testing._internal.hypothesis_utils.floats": ["torch.testing._internal.hypothesis_utils._floats_wrapper"], "torch.testing._internal.hypothesis_utils._get_valid_min_max": ["<builtin>.max", "<builtin>.min", "numpy.float32"], "torch.testing._internal.common_quantized._calculate_dynamic_qparams": ["<builtin>.isinstance", "<builtin>.max", "<builtin>.min", "<builtin>.round", "numpy.finfo", "<builtin>.float", "<builtin>.int"], "torch.cuda._utils._get_device_index": ["<builtin>.isinstance", "<builtin>.ValueError"], "torch.distributed.distributed_c10d._check_single_tensor": ["<builtin>.isinstance", "<builtin>.RuntimeError"], "torch.serialization.validate_cuda_device": ["<builtin>.RuntimeError"], "torch.jit._recursive.wrap_cpp_module": ["<builtin>.setattr", "torch.jit._recursive.wrap_cpp_module"], "torch.jit.trace_module": ["warnings.warn", "torch.jit._create_interpreter_name_lookup_fn", "<builtin>.isinstance", "<builtin>.AttributeError", "torch.jit.make_module", "torch.jit.make_tuple", "<builtin>.getattr", "torch.jit._check_trace"], "torch.jit._create_interpreter_name_lookup_fn": ["inspect.currentframe", "<builtin>.isinstance"], "torch._jit_internal._qualified_name": ["<builtin>.hasattr", "<builtin>.isinstance", "<builtin>.RuntimeError"], "torch.jit._check_trace": ["<builtin>.isinstance", "<builtin>.any", "torch._C._jit_pass_canonicalize", "torch._C._jit_pass_inline", "torch._C._jit_pass_erase_shape_information", "<builtin>.str", "re.sub", "<builtin>.zip", "<builtin>.enumerate", "torch.jit.TracingCheckError.__init__", "torch.jit._clone_inputs", "<builtin>.len", "warnings.warn", "<builtin>.hasattr", "torch._C.CompilationUnit", "torch.testing.assert_allclose", "torch.jit.indent", "torch.testing._get_default_tolerance"], "torch.onnx.symbolic_opset8._constant_fill": ["torch.onnx.symbolic_helper._cast_func_template"], "torch.onnx.symbolic_helper._maybe_get_const": ["torch.onnx.symbolic_helper._is_value", "torch.onnx.symbolic_helper._parse_arg"], "torch.onnx.symbolic_helper._arange_cast_helper": ["torch.onnx.symbolic_helper._is_value", "torch.onnx.symbolic_helper._is_none"], "torch.onnx.symbolic_helper._is_value": ["<builtin>.isinstance"], "torch.onnx.symbolic_opset9.nonzero": ["torch.onnx.symbolic_opset9.t"], "torch.onnx.symbolic_helper._get_const": ["torch.onnx.symbolic_helper._is_value", "<builtin>.RuntimeError", "torch.onnx.symbolic_helper._parse_arg"], "torch.onnx.symbolic_helper._is_packed_list": ["torch.onnx.symbolic_helper._is_value"], "torch.nn.modules.batchnorm._BatchNorm.__init__": ["torch.nn.modules.batchnorm._NormBase.__init__", "<builtin>.super"], "torch.nn.modules.batchnorm._NormBase.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.module.Module.register_buffer", "torch.nn.modules.batchnorm._NormBase.reset_parameters"], "torch.nn.modules.sparse.Embedding.reset_parameters": ["torch.nn.init.normal_"], "torch.nn.modules.linear.Linear.reset_parameters": ["torch.nn.init.kaiming_uniform_", "math.sqrt", "torch.nn.init._calculate_fan_in_and_fan_out", "torch.nn.init.uniform_"], "torch.onnx.symbolic_helper._unimplemented": ["warnings.warn"], "torch._overrides.has_torch_function": ["<builtin>.any", "<builtin>.hasattr"], "torch._overrides.handle_torch_function": ["torch._overrides._get_overloaded_args", "<builtin>.tuple", "<builtin>.map", "<builtin>.TypeError", "<builtin>.list"], "torch.nn.functional._get_softmax_dim": ["warnings.warn"], "torch.nn.modules.module.Module.add_module": ["<builtin>.TypeError", "<builtin>.isinstance", "torch.typename", "<builtin>.hasattr", "<builtin>.KeyError"], "torch.distributed.distributed_c10d._get_group_rank": ["<builtin>.RuntimeError"], "torch.distributed.distributed_c10d._get_default_group": ["torch.distributed.distributed_c10d.is_initialized", "<builtin>.RuntimeError"], "torch.nn.parallel.distributed.DistributedDataParallel._ddp_init_helper": ["<builtin>.hasattr", "warnings.warn", "torch.nn.parallel.replicate.replicate", "<builtin>.len", "<builtin>.zip", "<builtin>.list", "<builtin>.filter", "<builtin>.isinstance", "<builtin>.reversed", "torch.nn.parallel.distributed.DistributedDataParallel._passing_sync_batchnorm_handle"], "torch.nn.modules.dropout._DropoutNd.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.ValueError"], "torch.serialization._check_dill_version": ["torch.serialization.check_module_version_greater_or_equal", "<builtin>.ValueError", "<builtin>.str"], "torch.serialization._open_file_like": ["torch.serialization._is_path", "torch.serialization._open_file.__init__", "torch.serialization._open_buffer_writer.__default_init__", "torch.serialization._open_buffer_reader.__init__", "<builtin>.RuntimeError"], "torch.serialization._is_zipfile": ["<builtin>.len"], "torch.serialization._legacy_load": ["torch.serialization._get_restore_location", "warnings.warn", "difflib.unified_diff", "torch._utils_internal.get_source_lines_and_file", "torch.typename", "<builtin>.open", "<builtin>.len", "<builtin>.isinstance", "contextlib.closing", "torch.serialization.mkdtemp", "<builtin>.all", "<builtin>.int", "tarfile.open", "<builtin>.range", "os.path.join", "torch.serialization.storage_to_tensor_type", "struct.unpack", "torch.serialization._maybe_decode_ascii", "<builtin>.RuntimeError", "torch.serialization._check_seekable", "torch.serialization._should_read_directly", "torch.serialization._is_zipfile", "<builtin>.hasattr", "<builtin>.type"], "torch.serialization._open_zipfile_reader.__init__": ["<builtin>.super"], "torch.serialization._is_torchscript_zip": ["<builtin>.len"], "torch.serialization._load": ["torch.serialization._get_restore_location", "struct.pack", "io.BytesIO", "<builtin>.isinstance", "torch.serialization._maybe_decode_ascii"], "torch.nn.modules.utils._ntuple": ["<builtin>.isinstance", "<builtin>.tuple", "itertools.repeat"], "torch.cuda._lazy_call": ["torch.cuda.is_initialized", "<builtin>.callable", "traceback.format_stack"], "torch.nn.modules.pooling._AdaptiveAvgPoolNd.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.distributed.distributed_c10d._get_group_size": ["torch.distributed.distributed_c10d._check_default_pg", "<builtin>.RuntimeError", "<builtin>.len"], "torch.serialization._open_zipfile_writer": ["torch.serialization._is_path"], "torch.serialization._save": ["torch.is_storage", "torch.serialization.normalize_storage_type", "<builtin>.str", "torch.serialization.location_tag", "<builtin>.type", "io.BytesIO", "<builtin>.len", "<builtin>.sorted", "torch.serialization._should_read_directly"], "torch.serialization._legacy_save": ["<builtin>.isinstance", "<builtin>.RuntimeError", "<builtin>.issubclass", "torch.is_storage", "torch._utils_internal.get_source_lines_and_file", "torch.serialization.normalize_storage_type", "<builtin>.str", "torch.serialization.location_tag", "warnings.warn", "<builtin>.type", "<builtin>.dict", "<builtin>.sorted", "torch.serialization._should_read_directly"], "torch.distributed.distributed_c10d.Backend.__new__": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.getattr"], "torch.distributed.distributed_c10d._new_process_group_helper": ["<builtin>.str", "<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.len", "torch.distributed.distributed_c10d.Backend.__new__", "torch.distributed.distributed_c10d.is_mpi_available", "torch.distributed.distributed_c10d.is_nccl_available"], "torch.distributed.rendezvous.rendezvous": ["<builtin>.isinstance", "<builtin>.RuntimeError", "<builtin>.type", "urlparse.urlparse", "urllib.parse.urlparse", "<builtin>.dict", "urlparse.urlunparse", "urllib.parse.urlunparse", "<builtin>.filter"], "torch.nn.modules.pooling._MaxPoolNd.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.cuda.current_device": ["torch.cuda._lazy_init", "torch._C._cuda_getDevice"], "torch.utils.data.dataset.ConcatDataset.cumsum": ["<builtin>.len"], "torch": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.type"], "torch.nn.init.ones_": ["torch.nn.init._no_grad_fill_"], "torch.nn.init.zeros_": ["torch.nn.init._no_grad_zero_"], "torch.onnx.symbolic_opset8._try_cast_integer_to_float": ["warnings.warn", "<builtin>.tuple"], "torch.onnx.symbolic_opset8._cast_to_type": ["<builtin>.getattr"], "torch.testing._internal.hypothesis_utils._floats_wrapper": ["hypothesis.strategies.floats"], "torch.jit.make_module": ["<builtin>.isinstance", "torch.jit._recursive.create_script_module", "<builtin>.dir", "<builtin>.getattr", "torch.jit._recursive.make_stub_from_method"], "torch.jit.make_tuple": ["<builtin>.isinstance", "<builtin>.tuple"], "torch.jit.TracingCheckError.__init__": ["torch.jit.indent", "<builtin>.super"], "torch.jit._clone_inputs": ["<builtin>.isinstance", "torch.autograd.function._nested_map"], "torch.testing.assert_allclose": ["<builtin>.isinstance", "torch.testing._get_default_tolerance", "<builtin>.ValueError", "<builtin>.tuple", "<builtin>.int", "<builtin>.AssertionError", "<builtin>.list"], "torch.testing._get_default_tolerance": ["<builtin>.str", "torch.testing._get_default_tolerance", "<builtin>.max"], "torch.onnx.symbolic_helper._parse_arg": ["torch.onnx.symbolic_helper._is_value", "<builtin>.int", "<builtin>.float", "<builtin>.RuntimeError", "<builtin>.bool", "<builtin>.str"], "torch.nn.modules.module.Module.register_buffer": ["<builtin>.AttributeError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.KeyError", "torch.typename", "<builtin>.hasattr"], "torch.nn.modules.batchnorm._NormBase.reset_parameters": ["torch.nn.modules.batchnorm._NormBase.reset_running_stats", "torch.nn.init.ones_", "torch.nn.init.zeros_"], "torch.nn.init.normal_": ["torch.nn.init._no_grad_normal_"], "torch.nn.init.kaiming_uniform_": ["torch.nn.init._calculate_correct_fan", "torch.nn.init.calculate_gain", "math.sqrt"], "torch.nn.init._calculate_fan_in_and_fan_out": ["<builtin>.ValueError"], "torch.nn.init.uniform_": ["torch.nn.init._no_grad_uniform_"], "torch._overrides._get_overloaded_args": ["<builtin>.type", "<builtin>.hasattr", "<builtin>.len", "<builtin>.enumerate", "<builtin>.issubclass"], "torch.nn.parallel.replicate.replicate": ["torch.nn.parallel.replicate._replicatable_module", "<builtin>.RuntimeError", "<builtin>.list", "<builtin>.map", "torch.cuda._utils._get_device_index", "<builtin>.len", "<builtin>.enumerate", "torch.nn.parallel.replicate._broadcast_coalesced_reshape", "<builtin>.range", "torch.nn.parallel.replicate._is_script_module", "collections.OrderedDict", "<builtin>.setattr"], "torch.nn.parallel.distributed.DistributedDataParallel._passing_sync_batchnorm_handle": ["<builtin>.enumerate", "<builtin>.isinstance", "<builtin>.len"], "torch.serialization.check_module_version_greater_or_equal": ["<builtin>.tuple", "<builtin>.RuntimeError", "warnings.warn", "<builtin>.type", "<builtin>.enumerate", "<builtin>.str"], "torch.serialization._is_path": ["<builtin>.isinstance"], "torch.serialization._open_file.__init__": ["<builtin>.open", "<builtin>.super"], "torch.serialization._open_buffer_writer.__default_init__": ["torch.serialization._opener.__init__"], "torch.serialization._open_buffer_reader.__init__": ["torch.serialization._opener.__init__", "<builtin>.super", "torch.serialization._check_seekable"], "torch.serialization._get_restore_location": ["<builtin>.isinstance", "torch.serialization.default_restore_location", "<builtin>.str"], "torch._utils_internal.get_source_lines_and_file": ["inspect.getsourcefile", "inspect.getsourcelines", "<builtin>.OSError"], "torch.serialization.mkdtemp": ["tempfile.mkdtemp", "shutil.rmtree"], "torch.serialization.storage_to_tensor_type": ["<builtin>.type", "torch._utils._import_dotted_name", "<builtin>.getattr"], "torch.serialization._maybe_decode_ascii": ["<builtin>.isinstance"], "torch.serialization._check_seekable": ["<builtin>.str", "<builtin>.type"], "torch.serialization._should_read_directly": ["torch.serialization._is_compressed_file"], "torch.serialization.normalize_storage_type": ["<builtin>.getattr"], "torch.serialization.location_tag": ["<builtin>.RuntimeError", "torch.typename"], "torch.cuda._lazy_init": ["torch.cuda.is_initialized", "<builtin>.hasattr", "torch.cuda._check_driver", "torch._C._cuda_init", "<builtin>.RuntimeError", "<builtin>.AssertionError", "<builtin>.delattr", "torch._six.raise_from", "<builtin>.str", "torch.cuda.DeferredCudaCallError.__default_init__"], "torch.jit._recursive.create_script_module": ["<builtin>.isinstance", "torch.jit._recursive.check_module_initialized", "torch.jit._recursive.ConcreteTypeStore.get_or_create_concrete_type", "torch.jit._recursive.infer_concrete_type_builder", "torch.jit._recursive.create_script_module_impl"], "torch.jit._recursive.make_stub_from_method": ["torch._six.get_function_from_type", "<builtin>.type", "<builtin>.isinstance", "torch.jit._recursive.make_stub"], "torch.autograd.function._nested_map": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.type", "<builtin>.ValueError", "torch.typename"], "torch.nn.init._calculate_correct_fan": ["<builtin>.ValueError", "torch.nn.init._calculate_fan_in_and_fan_out"], "torch.nn.init.calculate_gain": ["math.sqrt", "<builtin>.ValueError", "<builtin>.isinstance"], "torch.nn.parallel.replicate._replicatable_module": ["<builtin>.next", "torch.nn.parallel.replicate._is_jit_enabled", "<builtin>.set", "torch.nn.parallel.replicate._is_script_module", "<builtin>.all", "torch.nn.parallel.replicate._replicatable_module"], "torch.nn.parallel.replicate._broadcast_coalesced_reshape": ["torch.cuda.comm.broadcast_coalesced", "<builtin>.len", "<builtin>.range"], "torch.nn.parallel.replicate._is_script_module": ["<builtin>.isinstance"], "torch.serialization.default_restore_location": ["<builtin>.RuntimeError", "torch.typename"], "torch._utils._import_dotted_name": ["<builtin>.__import__", "<builtin>.getattr"], "torch.cuda._check_driver": ["<builtin>.hasattr", "<builtin>.AssertionError", "torch._C._cuda_isDriverSufficient", "torch._C._cuda_getDriverVersion", "<builtin>.str"], "torch.jit._recursive.check_module_initialized": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.RuntimeError", "<builtin>.type"], "torch.jit._recursive.ConcreteTypeStore.get_or_create_concrete_type": ["<builtin>.isinstance", "<builtin>.hasattr", "torch.jit._recursive.infer_concrete_type_builder", "<builtin>.type"], "torch.jit._recursive.infer_concrete_type_builder": ["<builtin>.type", "<builtin>.isinstance", "<builtin>.getattr", "torch._jit_internal.fake_range", "<builtin>.set", "torch.jit._recursive.ConcreteTypeStore.get_or_create_concrete_type", "warnings.warn", "<builtin>.hasattr", "torch.jit._recursive._get_valid_constant", "<builtin>.AssertionError", "torch.jit._recursive.get_overload_name_mapping", "torch.jit._recursive.get_overload_annotations", "inspect.isfunction", "torch.jit._builtins._find_builtin"], "torch.jit._recursive.create_script_module_impl": ["<builtin>.dir", "<builtin>.getattr", "<builtin>.isinstance", "torch._jit_internal.is_ignored_fn", "<builtin>.type", "torch.jit._recursive.interface_script", "inspect.ismethod", "<builtin>.setattr", "torch.jit._recursive.create_script_module_impl", "torch.jit._recursive.create_methods_from_stubs", "functools.wraps", "torch._jit_internal.get_torchscript_modifier", "torch.jit._recursive.add_python_attr_to_scripted_model"], "torch._six.get_function_from_type": ["<builtin>.getattr"], "torch.jit._recursive.make_stub": ["torch._jit_internal.createResolutionCallbackFromClosure"], "torch._jit_internal.fake_range": ["torch._jit_internal.SourceContext.__init__"], "torch.jit._recursive._get_valid_constant": ["<builtin>.isinstance", "<builtin>.tuple", "torch.jit._recursive._get_valid_constant", "<builtin>.TypeError", "textwrap.dedent", "<builtin>.type"], "torch.jit._recursive.get_overload_annotations": ["<builtin>.dir", "<builtin>.type", "<builtin>.getattr", "<builtin>.callable", "<builtin>.hasattr", "torch._jit_internal._get_overloaded_methods", "<builtin>.list", "<builtin>.zip", "<builtin>.str", "<builtin>.range", "<builtin>.len"], "torch.jit._builtins._find_builtin": ["<builtin>.id", "torch.jit._builtins._get_builtin_table"], "torch._jit_internal.is_ignored_fn": ["torch._jit_internal.get_torchscript_modifier"], "torch.jit._recursive.interface_script": ["<builtin>.isinstance", "torch.jit._recursive.check_module_initialized", "torch.jit._recursive.make_stub_from_method", "torch.jit._recursive.create_script_module"], "torch.jit._recursive.create_methods_from_stubs": ["torch.jit.frontend.get_default_args"], "torch._jit_internal.get_torchscript_modifier": ["<builtin>.callable", "<builtin>.hasattr", "<builtin>.getattr"], "torch.jit._recursive.add_python_attr_to_scripted_model": ["<builtin>.hasattr", "torch.jit._recursive.script_model_defines_attr", "<builtin>.setattr", "<builtin>.getattr"], "torch._jit_internal.createResolutionCallbackFromClosure": ["torch._jit_internal.get_closure", "<builtin>.hasattr", "<builtin>.getattr", "torch._jit_internal.createResolutionCallbackFromEnv"], "torch._jit_internal.SourceContext.__init__": ["<builtin>.super"], "torch._jit_internal._get_overloaded_methods": ["<builtin>.hasattr", "torch._jit_internal._qualified_name", "torch._utils_internal.get_source_lines_and_file", "<builtin>.len", "<builtin>.Exception", "<builtin>.str"], "torch.jit._builtins._get_builtin_table": ["<builtin>.dir", "<builtin>.getattr", "<builtin>.callable", "torch.jit._builtins._is_special_functional_bound_op", "torch.distributed.autograd.is_available", "<builtin>.id"], "torch.jit.frontend.get_default_args": ["inspect.getargspec", "inspect.signature", "<builtin>.dict", "<builtin>.zip", "<builtin>.len"], "torch.jit._recursive.script_model_defines_attr": ["<builtin>.getattr", "torch._six.get_function_from_type"], "torch._jit_internal.get_closure": ["<builtin>.enumerate"], "torch._jit_internal.createResolutionCallbackFromEnv": ["<builtin>.getattr"], "torch.distributed.autograd.is_available": ["<builtin>.hasattr"]}