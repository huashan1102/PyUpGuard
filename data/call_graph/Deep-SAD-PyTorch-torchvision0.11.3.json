{"torchvision.transforms.transforms.Lambda.__init__": ["<builtin>.callable", "<builtin>.TypeError", "<builtin>.repr", "<builtin>.type"], "torchvision.datasets.utils.download_url": ["os.path.expanduser", "os.path.basename", "os.path.join", "os.makedirs", "torchvision.datasets.utils.check_integrity", "<builtin>.print", "torchvision._internally_replaced_utils._is_remote_location_available", "torchvision._internally_replaced_utils._download_file_from_remote_location", "torchvision.datasets.utils._get_redirect_url", "torchvision.datasets.utils._get_google_drive_file_id", "torchvision.datasets.utils.download_file_from_google_drive", "torchvision.datasets.utils._urlretrieve", "<builtin>.RuntimeError"], "torchvision.utils.make_grid": ["<builtin>.TypeError", "torch.is_tensor", "<builtin>.isinstance", "<builtin>.all", "<builtin>.type", "warnings.warn", "torch.stack", "torch.cat", "<builtin>.max", "<builtin>.float", "<builtin>.min", "<builtin>.int", "math.ceil", "<builtin>.range"], "torchvision.datasets.utils.check_integrity": ["os.path.isfile", "torchvision.datasets.utils.check_md5"], "torchvision.datasets.utils._get_redirect_url": ["<builtin>.range", "<builtin>.RecursionError", "urllib.request.urlopen", "urllib.request.Request"], "torchvision.datasets.utils._get_google_drive_file_id": ["urllib.parse.urlparse", "re.match"], "torchvision.datasets.utils.download_file_from_google_drive": ["os.path.expanduser", "os.path.join", "os.makedirs", "os.path.isfile", "torchvision.datasets.utils.check_integrity", "<builtin>.print", "requests.Session", "torchvision.datasets.utils._get_confirm_token", "torchvision.datasets.utils._quota_exceeded", "torchvision.datasets.utils._save_response_content", "<builtin>.next", "<builtin>.RuntimeError", "itertools.chain"], "torchvision.datasets.utils._urlretrieve": ["<builtin>.open", "urllib.request.urlopen", "urllib.request.Request", "torch.utils.model_zoo.tqdm", "<builtin>.iter"], "torchvision.datasets.utils.check_md5": ["torchvision.datasets.utils.calculate_md5"], "torchvision.datasets.utils._save_response_content": ["<builtin>.open", "torch.utils.model_zoo.tqdm", "<builtin>.len"], "torchvision.datasets.utils.calculate_md5": ["hashlib.md5", "<builtin>.open", "<builtin>.iter"]}