{"numpy.core.defchararray.array": ["<builtin>.isinstance", "numpy.core.defchararray.chararray.__new__", "<builtin>.len", "<builtin>.issubclass", "<builtin>.int"], "numpy.core.function_base.linspace": ["operator.index", "<builtin>.ValueError", "numpy.core.multiarray.result_type", "<builtin>.float", "numpy.core.fromnumeric.ndim", "numpy.core.numeric.isscalar", "numpy.core.numeric.moveaxis"], "numpy.ma.core._convert2ma.__init__": ["<builtin>.getattr", "numpy.ma.core._convert2ma.getdoc"], "numpy.lib.histograms.histogram": ["numpy.lib.histograms._ravel_and_check_weights", "numpy.lib.histograms._get_bin_edges", "numpy.lib.histograms._unsigned_subtract", "<builtin>.len", "numpy.lib.histograms._search_sorted_inclusive", "warnings.warn"], "numpy.lib.twodim_base.diag": ["numpy.ma.core.asanyarray", "<builtin>.len", "numpy.ma.core._convert2ma.__init__", "<builtin>.abs", "numpy.core.fromnumeric.diagonal", "<builtin>.ValueError"], "numpy.ma.core._MaskedUnaryOperation.__init__": ["numpy.ma.core._MaskedUFunc.__init__", "<builtin>.super"], "numpy.matlib.randn": ["<builtin>.isinstance", "numpy.matrixlib.defmatrix.asmatrix"], "numpy.lib.function_base.median": ["numpy.lib.function_base._ureduce"], "numpy.core.numeric.allclose": ["<builtin>.all", "numpy.core.numeric.isclose", "<builtin>.bool"], "numpy.core.defchararray.chararray.__new__": ["<builtin>.int", "<builtin>.isinstance"], "numpy.core.numeric.isscalar": ["<builtin>.isinstance", "<builtin>.type"], "numpy.core.numeric.moveaxis": ["numpy.core.numeric.normalize_axis_tuple", "<builtin>.len", "<builtin>.ValueError", "<builtin>.range", "<builtin>.sorted", "<builtin>.zip"], "numpy.ma.core._convert2ma.getdoc": ["<builtin>.getattr", "numpy.ma.core.get_object_signature", "numpy.ma.core._convert2ma._replace_return_type"], "numpy.lib.histograms._ravel_and_check_weights": ["warnings.warn", "<builtin>.ValueError"], "numpy.lib.histograms._get_bin_edges": ["<builtin>.isinstance", "numpy.lib.histograms._get_outer_edges", "<builtin>.ValueError", "<builtin>.TypeError", "<builtin>.int", "operator.index", "numpy.lib.histograms._unsigned_subtract"], "numpy.ma.core.asanyarray": ["<builtin>.isinstance"], "numpy.core.fromnumeric.diagonal": ["<builtin>.isinstance"], "numpy.matrixlib.defmatrix.asmatrix": ["numpy.matrixlib.defmatrix.matrix.__new__"], "numpy.lib.function_base._ureduce": ["<builtin>.list", "numpy.core.numeric.normalize_axis_tuple", "<builtin>.tuple", "<builtin>.len", "<builtin>.enumerate", "<builtin>.set", "<builtin>.sorted", "<builtin>.range"], "numpy.core.numeric.isclose": ["numpy.core._ufunc_config.errstate.__init__", "<builtin>.abs", "numpy.core.multiarray.result_type", "<builtin>.all", "numpy.core.numeric.zeros_like", "numpy.core.numeric.ones_like"], "numpy.core.numeric.normalize_axis_tuple": ["<builtin>.type", "operator.index", "<builtin>.tuple", "<builtin>.len", "<builtin>.ValueError", "<builtin>.set"], "numpy.ma.core.get_object_signature": ["numpy.compat._inspect.formatargspec", "numpy.compat._inspect.getargspec"], "numpy.ma.core._convert2ma._replace_return_type": ["<builtin>.RuntimeError"], "numpy.lib.histograms._get_outer_edges": ["<builtin>.ValueError"], "numpy.matrixlib.defmatrix.matrix.__new__": ["warnings.warn", "<builtin>.isinstance", "numpy.matrixlib.defmatrix._convert_from_string", "<builtin>.ValueError"], "numpy.core.numeric.zeros_like": ["numpy.core.multiarray.empty_like", "numpy.core.multiarray.copyto"], "numpy.core.numeric.ones_like": ["numpy.core.multiarray.empty_like", "numpy.core.multiarray.copyto"], "numpy.compat._inspect.formatargspec": ["<builtin>.len", "<builtin>.range", "numpy.compat._inspect.strseq"], "numpy.compat._inspect.getargspec": ["numpy.compat._inspect.ismethod", "numpy.compat._inspect.isfunction", "<builtin>.TypeError", "numpy.compat._inspect.getargs"], "numpy.matrixlib.defmatrix._convert_from_string": ["<builtin>.len", "<builtin>.map", "<builtin>.ValueError"], "numpy.compat._inspect.strseq": ["<builtin>.type", "numpy.compat._inspect.strseq"], "numpy.compat._inspect.ismethod": ["<builtin>.isinstance"], "numpy.compat._inspect.isfunction": ["<builtin>.isinstance"], "numpy.compat._inspect.getargs": ["numpy.compat._inspect.iscode", "<builtin>.TypeError", "<builtin>.list", "<builtin>.range"], "numpy.compat._inspect.iscode": ["<builtin>.isinstance"]}