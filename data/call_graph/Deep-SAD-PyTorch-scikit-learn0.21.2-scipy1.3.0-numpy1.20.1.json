{"numpy.ma.core._convert2ma.__init__": ["<builtin>.getattr", "numpy.ma.core._convert2ma.getdoc"], "numpy.ma.core._MaskedUnaryOperation.__init__": ["numpy.ma.core._MaskedUFunc.__init__", "<builtin>.super"], "numpy.lib.scimath.sqrt": ["numpy.lib.scimath._fix_real_lt_zero"], "numpy.core.defchararray.array": ["<builtin>.isinstance", "numpy.core.defchararray.chararray.__new__", "<builtin>.issubclass"], "numpy.core.einsumfunc.einsum": ["<builtin>.len", "<builtin>.TypeError", "numpy.core.einsumfunc.einsum_path", "<builtin>.enumerate", "<builtin>.sorted", "numpy.core.numeric.tensordot", "<builtin>.tuple"], "numpy.ma.core.isMaskedArray": ["<builtin>.isinstance"], "numpy.ma.core.MaskedArray.__new__": ["<builtin>.getattr", "<builtin>.type", "<builtin>.isinstance", "<builtin>.hasattr", "numpy.ma.core.make_mask_descr", "numpy.ma.core.MaskError.__default_init__", "numpy.ma.core.getmask", "numpy.ma.core.getmaskarray", "<builtin>.tuple", "<builtin>.len", "numpy.ma.core._check_fill_value"], "numpy.ma.core.MaskedArray.dtype": ["<builtin>.super", "<builtin>.type", "numpy.ma.core.make_mask_descr"], "numpy.core.numerictypes.issubdtype": ["numpy.core.numerictypes.issubclass_", "<builtin>.isinstance", "warnings.warn", "<builtin>.len", "<builtin>.repr", "<builtin>.issubclass"], "numpy.core.fromnumeric.ndim": ["numpy.core.numeric.asarray"], "numpy.core.fromnumeric.prod": ["numpy.core.fromnumeric._wrapreduction"], "numpy.core.getlimits.iinfo.__init__": ["<builtin>.type", "<builtin>.ValueError"], "numpy.core.shape_base.atleast_2d": ["numpy.core.numeric.asanyarray", "<builtin>.len"], "numpy.core.fromnumeric.amax": ["numpy.core.fromnumeric._wrapreduction"], "numpy.lib.function_base.diff": ["<builtin>.ValueError", "<builtin>.repr", "numpy.core.numeric.asanyarray", "<builtin>.list", "<builtin>.tuple", "<builtin>.len", "<builtin>.slice", "<builtin>.range"], "numpy.ma.core._convert2ma.getdoc": ["<builtin>.getattr", "numpy.ma.core.get_object_signature"], "numpy.lib.scimath._fix_real_lt_zero": ["numpy.core.numeric.asarray", "numpy.core.fromnumeric.any", "numpy.lib.scimath._tocomplex", "numpy.lib.type_check.isreal"], "numpy.core.defchararray.chararray.__new__": ["<builtin>.isinstance"], "numpy.core.einsumfunc.einsum_path": ["<builtin>.len", "<builtin>.TypeError", "<builtin>.isinstance", "<builtin>.int", "<builtin>.str", "numpy.core.einsumfunc._parse_einsum_input", "<builtin>.set", "<builtin>.range", "<builtin>.enumerate", "<builtin>.ValueError", "numpy.core.einsumfunc._compute_size_by_dict", "<builtin>.max", "<builtin>.sum", "numpy.core.einsumfunc._flop_count", "<builtin>.tuple", "numpy.core.einsumfunc._greedy_path", "numpy.core.einsumfunc._optimal_path", "<builtin>.KeyError", "numpy.core.einsumfunc._find_contraction", "<builtin>.sorted", "numpy.core.einsumfunc._can_dot", "<builtin>.list"], "numpy.core.numeric.tensordot": ["<builtin>.iter", "<builtin>.list", "<builtin>.range", "<builtin>.len", "numpy.core.numeric.asarray", "<builtin>.ValueError", "<builtin>.int", "numpy.core.multiarray.dot"], "numpy.ma.core.make_mask_descr": ["numpy.ma.core._replace_dtype_fields"], "numpy.ma.core.getmask": ["<builtin>.getattr"], "numpy.ma.core.getmaskarray": ["numpy.ma.core.getmask", "numpy.ma.core.make_mask_none", "<builtin>.getattr"], "numpy.ma.core._check_fill_value": ["numpy.ma.core.default_fill_value", "<builtin>.isinstance", "<builtin>.TypeError", "numpy.ma.core._recursive_set_fill_value", "<builtin>.ValueError"], "numpy.core.numerictypes.issubclass_": ["<builtin>.issubclass"], "numpy.core.fromnumeric._wrapreduction": ["<builtin>.type", "<builtin>.getattr"], "numpy.ma.core.get_object_signature": ["numpy.compat._inspect.formatargspec", "numpy.compat._inspect.getargspec"], "numpy.core.fromnumeric.any": ["numpy.core.fromnumeric._wrapreduction"], "numpy.lib.scimath._tocomplex": ["<builtin>.issubclass"], "numpy.lib.type_check.isreal": ["numpy.lib.type_check.imag"], "numpy.core.einsumfunc._parse_einsum_input": ["<builtin>.len", "<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.list", "<builtin>.range", "<builtin>.enumerate", "numpy.core.numeric.asanyarray", "<builtin>.TypeError", "<builtin>.sorted", "<builtin>.set", "<builtin>.max"], "numpy.core.einsumfunc._flop_count": ["numpy.core.einsumfunc._compute_size_by_dict", "<builtin>.max"], "numpy.core.einsumfunc._greedy_path": ["<builtin>.len", "numpy.core.einsumfunc._find_contraction", "<builtin>.range", "numpy.core.einsumfunc._flop_count", "itertools.combinations", "<builtin>.min", "numpy.core.einsumfunc._update_other_results", "numpy.core.einsumfunc._parse_possible_contraction", "<builtin>.tuple"], "numpy.core.einsumfunc._optimal_path": ["<builtin>.range", "<builtin>.len", "itertools.combinations", "numpy.core.einsumfunc._find_contraction", "numpy.core.einsumfunc._compute_size_by_dict", "<builtin>.min", "<builtin>.tuple", "numpy.core.einsumfunc._flop_count"], "numpy.core.einsumfunc._find_contraction": ["<builtin>.set", "<builtin>.enumerate"], "numpy.core.einsumfunc._can_dot": ["<builtin>.len", "<builtin>.set", "<builtin>.int"], "numpy.ma.core._replace_dtype_fields": ["numpy.ma.core._replace_dtype_fields_recursive"], "numpy.ma.core.make_mask_none": ["numpy.ma.core.make_mask_descr"], "numpy.ma.core.default_fill_value": ["numpy.ma.core._get_dtype_of", "numpy.ma.core._recursive_fill_value"], "numpy.ma.core._recursive_set_fill_value": ["<builtin>.len", "<builtin>.zip", "<builtin>.tuple", "numpy.ma.core._recursive_set_fill_value"], "numpy.compat._inspect.formatargspec": ["<builtin>.len", "<builtin>.range", "numpy.compat._inspect.strseq"], "numpy.compat._inspect.getargspec": ["numpy.compat._inspect.ismethod", "numpy.compat._inspect.isfunction", "<builtin>.TypeError", "numpy.compat._inspect.getargs"], "numpy.lib.type_check.imag": ["numpy.core.numeric.asanyarray"], "numpy.core.einsumfunc._update_other_results": ["<builtin>.int"], "numpy.core.einsumfunc._parse_possible_contraction": ["numpy.core.einsumfunc._find_contraction", "numpy.core.einsumfunc._compute_size_by_dict", "<builtin>.sum", "numpy.core.einsumfunc._flop_count", "<builtin>.len"], "numpy.ma.core._replace_dtype_fields_recursive": ["<builtin>.list", "<builtin>.len", "<builtin>.tuple"], "numpy.ma.core._get_dtype_of": ["<builtin>.isinstance", "<builtin>.hasattr"], "numpy.ma.core._recursive_fill_value": ["<builtin>.tuple", "numpy.ma.core._recursive_fill_value"], "numpy.compat._inspect.strseq": ["<builtin>.type", "numpy.compat._inspect.strseq"], "numpy.compat._inspect.ismethod": ["<builtin>.isinstance"], "numpy.compat._inspect.isfunction": ["<builtin>.isinstance"], "numpy.compat._inspect.getargs": ["numpy.compat._inspect.iscode", "<builtin>.TypeError", "<builtin>.list", "<builtin>.range"], "numpy.compat._inspect.iscode": ["<builtin>.isinstance"]}