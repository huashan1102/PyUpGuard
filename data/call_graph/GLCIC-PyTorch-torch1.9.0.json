{"torch.optim.adadelta.Adadelta.__init__": ["<builtin>.ValueError", "<builtin>.dict", "torch.optim.optimizer.Optimizer.__init__", "<builtin>.super"], "torch.onnx.symbolic_opset11.unsqueeze": ["torch.onnx.symbolic_helper._unsqueeze_helper"], "torch.onnx.symbolic_opset9.unsqueeze": ["torch.onnx.symbolic_helper._get_tensor_rank", "warnings.warn", "torch.onnx.symbolic_helper._unimplemented", "<builtin>.str", "torch.onnx.symbolic_helper._unsqueeze_helper"], "torch.nn.modules.activation.ReLU.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.nn.modules.linear.Linear.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.linear.Linear.reset_parameters"], "torch.onnx.symbolic_opset8.zeros": ["torch.onnx.symbolic_opset8._constant_fill"], "torch.nn.modules.activation.Sigmoid.__default_init__": ["torch.nn.modules.module.Module.__init__"], "torch.autograd._functions.tensor.Resize.__default_init__": ["torch.autograd.function.Function.__init__"], "torch.utils.data.dataloader.DataLoader.__init__": ["<builtin>.ValueError", "<builtin>.isinstance", "torch.utils.data.dataloader._InfiniteConstantSampler.__init__", "torch.utils.data.dataloader.DataLoader.check_worker_number_rationality"], "torch.nn.modules.conv.ConvTranspose2d.__init__": ["torch.nn.modules.utils._ntuple", "torch.nn.modules.conv._ConvTransposeNd.__init__", "<builtin>.super"], "torch.nn.modules.batchnorm.BatchNorm2d.__default_init__": ["torch.nn.modules.batchnorm._BatchNorm.__init__", "torch.nn.modules.batchnorm._NormBase.__init__"], "torch.serialization.load": ["torch.serialization._check_dill_version", "torch.serialization._open_file_like", "torch.serialization._is_zipfile", "torch.serialization._legacy_load", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._is_torchscript_zip", "torch.serialization._load", "warnings.warn"], "torch.nn.modules.loss.BCELoss.__init__": ["torch.nn.modules.loss._WeightedLoss.__init__", "<builtin>.super"], "torch.onnx.symbolic_opset8.ones": ["torch.onnx.symbolic_opset8._constant_fill"], "torch.distributed.pipeline.sync.microbatch.Batch.__init__": ["torch.is_tensor"], "torch.distributed.pipeline.sync.microbatch.Batch.tensor": ["<builtin>.AttributeError", "typing.cast"], "torch.onnx.symbolic_opset9.tensor": ["torch.onnx.symbolic_helper._get_const", "torch.onnx.symbolic_helper._is_packed_list", "<builtin>.list", "torch.onnx.symbolic_helper._unpack_list"], "torch.testing._internal.hypothesis_utils.tensor": ["<builtin>.isinstance", "hypothesis.strategies.sampled_from", "hypothesis.assume", "torch.testing._internal.hypothesis_utils.floats", "hypothesis.extra.numpy.arrays", "numpy.isnan", "numpy.isinf", "torch.testing._internal.hypothesis_utils._get_valid_min_max", "torch.testing._internal.common_quantized._calculate_dynamic_qparams"], "torch.distributions.constraints._Cat.__init__": ["<builtin>.all", "<builtin>.isinstance", "<builtin>.list", "<builtin>.len", "<builtin>.super"], "torch.cuda.is_available": ["<builtin>.hasattr", "torch._C._cuda_getDeviceCount"], "torch.nn.parallel.data_parallel.DataParallel.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch._utils._get_available_device_type", "torch._utils._get_all_device_indices", "torch._utils._get_device_index", "torch.nn.parallel.data_parallel._check_balance", "<builtin>.len"], "torch.autograd.grad_mode.no_grad.__init__": ["<builtin>.super"], "torch.cuda.device.__init__": ["torch.cuda._utils._get_device_index"], "torch.serialization.save": ["torch.serialization._check_dill_version", "torch.serialization._open_file_like", "torch.serialization._legacy_save", "torch.serialization._open_zipfile_writer", "torch.serialization._save"], "torch.nn.modules.conv.Conv2d.__init__": ["torch.nn.modules.utils._ntuple", "<builtin>.isinstance", "<builtin>.super"], "torch.optim.optimizer.Optimizer.__init__": ["torch.optim.optimizer.Optimizer._hook_for_profile", "<builtin>.isinstance", "<builtin>.TypeError", "torch.typename", "collections.defaultdict", "<builtin>.list", "<builtin>.len", "<builtin>.ValueError", "torch.optim.optimizer.Optimizer.add_param_group"], "torch.onnx.symbolic_helper._get_tensor_rank": ["torch.onnx.symbolic_helper._is_tensor"], "torch.onnx.symbolic_helper._unimplemented": ["warnings.warn"], "torch.nn.modules.module.Module.__init__": ["collections.OrderedDict", "<builtin>.set"], "torch.nn.modules.module.Module.register_parameter": ["<builtin>.AttributeError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.KeyError", "torch.typename", "<builtin>.hasattr", "<builtin>.ValueError"], "torch.nn.modules.linear.Linear.reset_parameters": ["torch.nn.init.kaiming_uniform_", "math.sqrt", "torch.nn.init._calculate_fan_in_and_fan_out", "torch.nn.init.uniform_"], "torch.onnx.symbolic_opset8._constant_fill": ["torch.onnx.symbolic_helper._cast_func_template"], "torch.autograd.function.Function.__init__": ["warnings.warn"], "torch.utils.data.dataloader._InfiniteConstantSampler.__init__": ["<builtin>.super"], "torch.utils.data.dataloader.DataLoader.check_worker_number_rationality": ["<builtin>.hasattr", "<builtin>.len", "os.sched_getaffinity", "os.cpu_count", "warnings.warn"], "torch.nn.modules.utils._ntuple": ["<builtin>.isinstance", "<builtin>.tuple", "itertools.repeat"], "torch.nn.modules.conv._ConvTransposeNd.__init__": ["<builtin>.ValueError", "torch.nn.modules.conv._ConvNd.__init__", "<builtin>.super"], "torch.nn.modules.batchnorm._BatchNorm.__init__": ["torch.nn.modules.batchnorm._NormBase.__init__", "<builtin>.super"], "torch.nn.modules.batchnorm._NormBase.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.module.Module.register_buffer", "torch.nn.modules.batchnorm._NormBase.reset_parameters"], "torch.serialization._check_dill_version": ["torch.serialization.check_module_version_greater_or_equal", "<builtin>.ValueError", "<builtin>.str"], "torch.serialization._open_file_like": ["torch.serialization._is_path", "torch.serialization._open_file.__init__", "torch.serialization._open_buffer_writer.__default_init__", "torch.serialization._open_buffer_reader.__init__", "<builtin>.RuntimeError"], "torch.serialization._is_zipfile": ["<builtin>.len"], "torch.serialization._legacy_load": ["torch.serialization._get_restore_location", "warnings.warn", "difflib.unified_diff", "torch._utils_internal.get_source_lines_and_file", "torch.typename", "<builtin>.open", "<builtin>.len", "<builtin>.isinstance", "contextlib.closing", "torch.serialization.mkdtemp", "<builtin>.all", "<builtin>.int", "tarfile.open", "<builtin>.range", "os.path.join", "torch.serialization.storage_to_tensor_type", "struct.unpack", "torch.serialization._maybe_decode_ascii", "<builtin>.RuntimeError", "torch.serialization._check_seekable", "torch.serialization._should_read_directly", "torch.serialization._is_zipfile", "<builtin>.hasattr", "<builtin>.type"], "torch.serialization._open_zipfile_reader.__init__": ["<builtin>.super"], "torch.serialization._load": ["torch.serialization._get_restore_location", "<builtin>.isinstance", "torch.serialization._maybe_decode_ascii", "<builtin>.super", "io.BytesIO"], "torch.nn.modules.loss._WeightedLoss.__init__": ["torch.nn.modules.loss._Loss.__init__", "<builtin>.super", "torch.nn.modules.module.Module.register_buffer"], "torch": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.type"], "torch.onnx.symbolic_helper._get_const": ["torch.onnx.symbolic_helper._is_constant", "<builtin>.RuntimeError", "torch.onnx.symbolic_helper._parse_arg"], "torch.onnx.symbolic_helper._is_packed_list": ["torch.onnx.symbolic_helper._is_value"], "torch.onnx.symbolic_helper._unpack_list": ["<builtin>.list"], "torch.testing._internal.hypothesis_utils.floats": ["torch.testing._internal.hypothesis_utils._floats_wrapper"], "torch.testing._internal.hypothesis_utils._get_valid_min_max": ["<builtin>.max", "<builtin>.min", "numpy.float32"], "torch.testing._internal.common_quantized._calculate_dynamic_qparams": ["<builtin>.isinstance", "<builtin>.max", "<builtin>.min", "<builtin>.round", "numpy.finfo", "<builtin>.float", "<builtin>.int"], "torch._utils._get_all_device_indices": ["torch._utils._get_device_attr", "<builtin>.list", "<builtin>.range"], "torch._utils._get_device_index": ["<builtin>.isinstance", "<builtin>.ValueError", "torch._utils.get_current_device_index", "torch._utils._get_current_device_index"], "torch.nn.parallel.data_parallel._check_balance": ["torch._utils._get_device_index", "torch._utils._get_devices_properties", "<builtin>.min", "<builtin>.max", "<builtin>.enumerate", "warnings.warn", "operator.itemgetter"], "torch.cuda._utils._get_device_index": ["<builtin>.isinstance", "<builtin>.ValueError", "torch._utils._get_device_index"], "torch.serialization._legacy_save": ["<builtin>.isinstance", "<builtin>.issubclass", "torch.is_storage", "torch._utils_internal.get_source_lines_and_file", "typing.cast", "torch.serialization.normalize_storage_type", "<builtin>.str", "torch.serialization.location_tag", "warnings.warn", "<builtin>.type", "<builtin>.dict", "<builtin>.sorted", "torch.serialization._should_read_directly"], "torch.serialization._open_zipfile_writer": ["torch.serialization._is_path"], "torch.serialization._save": ["torch.is_storage", "torch.serialization.normalize_storage_type", "torch.serialization.location_tag", "<builtin>.type", "<builtin>.str", "<builtin>.len", "io.BytesIO", "<builtin>.sorted"], "torch.optim.optimizer.Optimizer._hook_for_profile": ["functools.wraps", "<builtin>.getattr"], "torch.optim.optimizer.Optimizer.add_param_group": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.list", "<builtin>.ValueError", "torch.typename", "<builtin>.len", "warnings.warn", "<builtin>.set"], "torch.nn.init.kaiming_uniform_": ["warnings.warn", "torch.nn.init._calculate_correct_fan", "torch.nn.init.calculate_gain", "math.sqrt"], "torch.nn.init._calculate_fan_in_and_fan_out": ["<builtin>.ValueError"], "torch.nn.init.uniform_": ["torch.nn.init._no_grad_uniform_"], "torch.nn.modules.conv._ConvNd.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.any", "torch.nn.modules.utils._reverse_repeat_tuple", "<builtin>.len", "<builtin>.zip", "<builtin>.range", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.conv._ConvNd.reset_parameters"], "torch.nn.modules.module.Module.register_buffer": ["<builtin>.isinstance", "<builtin>.RuntimeError", "<builtin>.AttributeError", "<builtin>.TypeError", "<builtin>.KeyError", "torch.typename", "<builtin>.hasattr"], "torch.nn.modules.batchnorm._NormBase.reset_parameters": ["torch.nn.modules.batchnorm._NormBase.reset_running_stats", "torch.nn.init.ones_", "torch.nn.init.zeros_"], "torch.serialization.check_module_version_greater_or_equal": ["<builtin>.tuple", "<builtin>.RuntimeError", "warnings.warn", "<builtin>.type", "<builtin>.enumerate", "<builtin>.str"], "torch.serialization._is_path": ["<builtin>.isinstance"], "torch.serialization._open_file.__init__": ["<builtin>.open", "<builtin>.super"], "torch.serialization._open_buffer_writer.__default_init__": ["torch.serialization._opener.__init__"], "torch.serialization._open_buffer_reader.__init__": ["torch.serialization._opener.__init__", "<builtin>.super", "torch.serialization._check_seekable"], "torch.serialization._get_restore_location": ["<builtin>.isinstance", "torch.serialization.default_restore_location", "<builtin>.str"], "torch._utils_internal.get_source_lines_and_file": ["inspect.getsourcefile", "inspect.getsourcelines", "<builtin>.OSError"], "torch.serialization.mkdtemp": ["tempfile.mkdtemp", "shutil.rmtree"], "torch.serialization.storage_to_tensor_type": ["<builtin>.type", "torch._utils._import_dotted_name", "<builtin>.getattr"], "torch.serialization._maybe_decode_ascii": ["<builtin>.isinstance"], "torch.serialization._check_seekable": ["<builtin>.str", "<builtin>.type"], "torch.serialization._should_read_directly": ["torch.serialization._is_compressed_file"], "torch.nn.modules.loss._Loss.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn._reduction.legacy_get_string"], "torch.onnx.symbolic_helper._is_constant": ["torch.onnx.symbolic_helper._is_value"], "torch.onnx.symbolic_helper._parse_arg": ["torch.onnx.symbolic_helper._is_value", "<builtin>.int", "<builtin>.float", "<builtin>.RuntimeError", "<builtin>.bool", "<builtin>.str"], "torch.onnx.symbolic_helper._is_value": ["<builtin>.isinstance"], "torch.testing._internal.hypothesis_utils._floats_wrapper": ["<builtin>.len", "hypothesis.strategies.floats"], "torch._utils._get_device_attr": ["torch._utils._get_available_device_type"], "torch._utils._get_current_device_index": ["torch._utils._get_device_attr"], "torch._utils._get_devices_properties": ["torch._utils._get_device_attr"], "torch.serialization.normalize_storage_type": ["<builtin>.getattr"], "torch.serialization.location_tag": ["<builtin>.RuntimeError", "torch.typename"], "torch.nn.init._calculate_correct_fan": ["<builtin>.ValueError", "torch.nn.init._calculate_fan_in_and_fan_out"], "torch.nn.init.calculate_gain": ["math.sqrt", "<builtin>.ValueError", "<builtin>.isinstance"], "torch.nn.modules.utils._reverse_repeat_tuple": ["<builtin>.tuple", "<builtin>.reversed", "<builtin>.range"], "torch.nn.modules.conv._ConvNd.reset_parameters": ["torch.nn.init.kaiming_uniform_", "math.sqrt", "torch.nn.init._calculate_fan_in_and_fan_out", "torch.nn.init.uniform_"], "torch.nn.init.ones_": ["torch.nn.init._no_grad_fill_"], "torch.nn.init.zeros_": ["torch.nn.init._no_grad_zero_"], "torch.serialization.default_restore_location": ["<builtin>.RuntimeError", "torch.typename"], "torch._utils._import_dotted_name": ["<builtin>.__import__", "<builtin>.getattr"], "torch.nn._reduction.legacy_get_string": ["warnings.warn"]}