{"<builtin>": ["<builtin>.super", "<builtin>.isinstance", "<builtin>.tuple", "<builtin>.ValueError", "<builtin>.str", "<builtin>.type", "<builtin>.hasattr", "<builtin>.AttributeError", "<builtin>.len", "<builtin>.NotImplementedError", "<builtin>.RuntimeError", "<builtin>.list", "<builtin>.enumerate", "<builtin>.any", "<builtin>.all", "<builtin>.map", "<builtin>.range", "<builtin>.int", "<builtin>.next", "<builtin>.TypeError", "<builtin>.KeyError", "<builtin>.max", "<builtin>.min", "<builtin>.round", "<builtin>.float", "<builtin>.setattr", "<builtin>.getattr", "<builtin>.zip", "<builtin>.filter", "<builtin>.reversed", "<builtin>.open", "<builtin>.callable", "<builtin>.sorted", "<builtin>.issubclass", "<builtin>.dict", "<builtin>.dir", "<builtin>.AssertionError", "<builtin>.bool", "<builtin>.OSError", "<builtin>.delattr", "<builtin>.set", "<builtin>.__import__", "<builtin>.id", "<builtin>.Exception"], "hypothesis": ["hypothesis.strategies.sampled_from", "hypothesis.assume", "hypothesis.extra.numpy.arrays", "hypothesis.strategies.floats"], "numpy": ["numpy.isnan", "numpy.isinf", "numpy.float32", "numpy.finfo"], "os": ["os.path.isdir", "os.path.exists", "os.path.join"], "torch": ["torch._C.CompilationUnit", "torch._C.import_ir_module", "torch._C.import_ir_module_from_buffer", "torch._C._cuda_setDevice", "torch._C._create_function_from_trace", "torch._C._cuda_isDriverSufficient", "torch._C._cuda_getDeviceCount", "torch._C.default_generator.manual_seed", "torch._C._jit_pass_canonicalize", "torch._C._jit_pass_inline", "torch._C._jit_pass_erase_shape_information", "torch._C._cuda_getDevice", "torch._C._cuda_init", "torch._C._cuda_getDriverVersion"], "warnings": ["warnings.warn"], "collections": ["collections.OrderedDict"], "inspect": ["inspect.currentframe", "inspect.getsourcefile", "inspect.getsourcelines", "inspect.isfunction", "inspect.ismethod", "inspect.getargspec", "inspect.signature"], "re": ["re.sub"], "math": ["math.sqrt"], "difflib": ["difflib.unified_diff"], "contextlib": ["contextlib.closing"], "tarfile": ["tarfile.open"], "struct": ["struct.unpack", "struct.pack"], "io": ["io.BytesIO"], "itertools": ["itertools.repeat"], "traceback": ["traceback.format_stack"], "urlparse": ["urlparse.urlparse", "urlparse.urlunparse"], "urllib": ["urllib.parse.urlparse", "urllib.parse.urlunparse"], "tempfile": ["tempfile.mkdtemp"], "shutil": ["shutil.rmtree"], "functools": ["functools.wraps"], "textwrap": ["textwrap.dedent"]}