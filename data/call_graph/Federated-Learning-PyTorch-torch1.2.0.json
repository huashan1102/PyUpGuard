{"torch.optim.sgd.SGD.__init__": ["<builtin>.ValueError", "<builtin>.dict", "torch.optim.optimizer.Optimizer.__init__", "<builtin>.super"], "torch.optim.adam.Adam.__init__": ["<builtin>.ValueError", "<builtin>.dict", "torch.optim.optimizer.Optimizer.__init__", "<builtin>.super"], "torch.nn.modules.activation.ReLU.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.nn.modules.conv.Conv2d.__init__": ["torch.nn.modules.utils._ntuple", "<builtin>.super"], "torch.onnx.symbolic_opset7.max": ["warnings.warn", "torch.onnx.symbolic_opset9.max"], "torch.onnx.symbolic_opset9.max": ["torch.onnx.symbolic_helper._get_const"], "torch.utils.data.dataloader.DataLoader.__init__": ["<builtin>.ValueError", "<builtin>.isinstance", "torch.utils.data.dataloader._InfiniteConstantSampler.__init__"], "torch.onnx.symbolic_opset9.div": ["torch.onnx.symbolic_helper._maybe_get_scalar", "torch.onnx.symbolic_helper._if_scalar_type_as"], "torch.nn.modules.dropout.Dropout2d.__default_init__": ["torch.nn.modules.dropout._DropoutNd.__init__", "torch.nn.modules.module.Module.__init__"], "torch.cuda.set_device": ["torch.cuda._utils._get_device_index"], "torch.nn.modules.activation.Softmax.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.nn.modules.loss.NLLLoss.__init__": ["torch.nn.modules.loss._WeightedLoss.__init__", "<builtin>.super"], "torch._jit_internal.boolean_dispatch": ["<builtin>.len", "<builtin>.RuntimeError"], "torch.nn.modules.linear.Linear.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.linear.Linear.reset_parameters"], "torch.nn.modules.pooling.MaxPool2d.__default_init__": ["torch.nn.modules.pooling._MaxPoolNd.__init__", "torch.nn.modules.module.Module.__init__"], "torch.nn.modules.batchnorm.BatchNorm2d.__default_init__": ["torch.nn.modules.batchnorm._BatchNorm.__init__", "torch.nn.modules.module.Module.__init__"], "torch.nn.modules.dropout.Dropout.__default_init__": ["torch.nn.modules.dropout._DropoutNd.__init__", "torch.nn.modules.module.Module.__init__"], "torch.nn.modules.container.Sequential.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.isinstance", "<builtin>.enumerate", "<builtin>.len", "torch.nn.modules.module.Module.add_module", "<builtin>.str"], "torch.optim.optimizer.Optimizer.__init__": ["<builtin>.isinstance", "<builtin>.TypeError", "torch.typename", "collections.defaultdict", "<builtin>.list", "<builtin>.len", "<builtin>.ValueError", "torch.optim.optimizer.Optimizer.add_param_group"], "torch.nn.modules.module.Module.__init__": ["torch.nn.modules.module.Module._construct"], "torch.nn.modules.utils._ntuple": ["<builtin>.isinstance", "<builtin>.tuple", "itertools.repeat"], "torch.onnx.symbolic_helper._get_const": ["torch.onnx.symbolic_helper._is_value", "<builtin>.RuntimeError", "torch.onnx.symbolic_helper._parse_arg"], "torch.utils.data.dataloader._InfiniteConstantSampler.__init__": ["<builtin>.super"], "torch.onnx.symbolic_helper._maybe_get_scalar": ["torch.onnx.symbolic_helper._maybe_get_const", "<builtin>.isinstance"], "torch.onnx.symbolic_helper._if_scalar_type_as": ["<builtin>.isinstance", "torch.onnx.symbolic_helper._is_complete_or_dimensioned_tensor_type", "<builtin>.getattr"], "torch.nn.modules.dropout._DropoutNd.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.ValueError"], "torch.cuda._utils._get_device_index": ["<builtin>.isinstance", "<builtin>.ValueError"], "torch.nn.modules.loss._WeightedLoss.__init__": ["torch.nn.modules.loss._Loss.__init__", "<builtin>.super", "torch.nn.modules.module.Module.register_buffer"], "torch.nn.modules.module.Module.register_parameter": ["<builtin>.AttributeError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.KeyError", "torch.typename", "<builtin>.hasattr", "<builtin>.ValueError"], "torch.nn.modules.linear.Linear.reset_parameters": ["torch.nn.init.kaiming_uniform_", "math.sqrt", "torch.nn.init._calculate_fan_in_and_fan_out", "torch.nn.init.uniform_"], "torch.nn.modules.pooling._MaxPoolNd.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.nn.modules.batchnorm._BatchNorm.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.module.Module.register_buffer", "torch.nn.modules.batchnorm._BatchNorm.reset_parameters"], "torch.nn.modules.module.Module.add_module": ["<builtin>.TypeError", "<builtin>.isinstance", "torch.typename", "<builtin>.hasattr", "<builtin>.KeyError"], "torch": ["<builtin>.isinstance", "<builtin>.hasattr"], "torch.optim.optimizer.Optimizer.add_param_group": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.list", "<builtin>.ValueError", "torch.typename", "<builtin>.set"], "torch.nn.modules.module.Module._construct": ["collections.OrderedDict"], "torch.onnx.symbolic_helper._is_value": ["<builtin>.isinstance"], "torch.onnx.symbolic_helper._parse_arg": ["torch.onnx.symbolic_helper._is_value", "<builtin>.int", "<builtin>.float", "<builtin>.RuntimeError", "<builtin>.bool"], "torch.onnx.symbolic_helper._maybe_get_const": ["torch.onnx.symbolic_helper._is_value", "torch.onnx.symbolic_helper._parse_arg"], "torch.nn.modules.loss._Loss.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn._reduction.legacy_get_string"], "torch.nn.modules.module.Module.register_buffer": ["<builtin>.AttributeError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.KeyError", "torch.typename", "<builtin>.hasattr"], "torch.nn.init.kaiming_uniform_": ["torch.nn.init._calculate_correct_fan", "torch.nn.init.calculate_gain", "math.sqrt"], "torch.nn.init._calculate_fan_in_and_fan_out": ["<builtin>.ValueError"], "torch.nn.init.uniform_": ["torch.nn.init._no_grad_uniform_"], "torch.nn.modules.batchnorm._BatchNorm.reset_parameters": ["torch.nn.modules.batchnorm._BatchNorm.reset_running_stats", "torch.nn.init.ones_", "torch.nn.init.zeros_"], "torch.nn._reduction.legacy_get_string": ["warnings.warn"], "torch.nn.init._calculate_correct_fan": ["<builtin>.ValueError", "torch.nn.init._calculate_fan_in_and_fan_out"], "torch.nn.init.calculate_gain": ["math.sqrt", "<builtin>.ValueError", "<builtin>.isinstance"], "torch.nn.init.ones_": ["torch.nn.init._no_grad_fill_"], "torch.nn.init.zeros_": ["torch.nn.init._no_grad_zero_"]}