{"sklearn.metrics.classification.classification_report": ["sklearn.metrics.classification._check_targets", "sklearn.utils.multiclass.unique_labels", "numpy.asarray", "<builtin>.set", "<builtin>.len", "warnings.warn", "<builtin>.ValueError", "sklearn.metrics.classification.precision_recall_fscore_support", "<builtin>.zip", "<builtin>.max", "<builtin>.dict", "numpy.sum"], "sklearn.metrics.ranking.roc_auc_score": ["sklearn.metrics.ranking.roc_curve", "numpy.searchsorted", "numpy.append", "sklearn.metrics.ranking.auc", "<builtin>.len", "<builtin>.ValueError", "numpy.interp", "numpy.unique", "sklearn.utils.multiclass.type_of_target", "sklearn.preprocessing.label.label_binarize", "sklearn.metrics.base._average_binary_score"], "sklearn.metrics.classification.f1_score": ["sklearn.metrics.classification.fbeta_score"], "sklearn.metrics.classification._check_targets": ["sklearn.utils.validation.check_consistent_length", "sklearn.utils.multiclass.type_of_target", "<builtin>.len", "<builtin>.ValueError", "sklearn.utils.validation.column_or_1d", "numpy.union1d", "scipy.sparse.csr_matrix"], "sklearn.utils.multiclass.unique_labels": ["<builtin>.ValueError", "<builtin>.set", "sklearn.utils.multiclass.type_of_target", "<builtin>.len", "sklearn.utils.validation.check_array", "<builtin>.repr", "itertools.chain.from_iterable", "<builtin>.isinstance", "numpy.array", "<builtin>.sorted"], "sklearn.metrics.classification.precision_recall_fscore_support": ["<builtin>.ValueError", "sklearn.metrics.classification._check_set_wise_labels", "sklearn.metrics.classification.multilabel_confusion_matrix", "numpy.array", "sklearn.metrics.classification._prf_divide", "numpy.average", "<builtin>.len"], "sklearn.metrics.ranking.roc_curve": ["sklearn.metrics.ranking._binary_clf_curve", "<builtin>.len", "numpy.where", "numpy.logical_or", "numpy.diff", "warnings.warn", "numpy.repeat"], "sklearn.metrics.ranking.auc": ["sklearn.utils.validation.check_consistent_length", "sklearn.utils.validation.column_or_1d", "<builtin>.ValueError", "warnings.warn", "numpy.lexsort", "numpy.diff", "numpy.any", "numpy.all", "numpy.trapz", "<builtin>.isinstance"], "sklearn.utils.multiclass.type_of_target": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.ValueError", "sklearn.utils.multiclass.is_multilabel", "numpy.asarray", "<builtin>.len", "numpy.any", "sklearn.utils.validation._assert_all_finite", "numpy.unique"], "sklearn.preprocessing.label.label_binarize": ["<builtin>.isinstance", "sklearn.utils.validation.check_array", "sklearn.utils.validation._num_samples", "<builtin>.ValueError", "sklearn.utils.multiclass.type_of_target", "scipy.sparse.issparse", "<builtin>.len", "numpy.asarray", "scipy.sparse.csr_matrix", "numpy.zeros", "numpy.sort", "sklearn.utils.multiclass.unique_labels", "sklearn.utils.validation.column_or_1d", "numpy.in1d", "numpy.searchsorted", "numpy.hstack", "numpy.empty_like", "numpy.cumsum", "numpy.any"], "sklearn.metrics.base._average_binary_score": ["<builtin>.ValueError", "sklearn.utils.multiclass.type_of_target", "sklearn.utils.validation.check_consistent_length", "sklearn.utils.validation.check_array", "numpy.repeat", "numpy.isclose", "numpy.sum", "numpy.multiply", "numpy.reshape", "numpy.zeros", "<builtin>.range", "numpy.average"], "sklearn.metrics.classification.fbeta_score": ["sklearn.metrics.classification.precision_recall_fscore_support"], "sklearn.utils.validation.check_consistent_length": ["sklearn.utils.validation._num_samples", "numpy.unique", "<builtin>.len", "<builtin>.ValueError", "<builtin>.int"], "sklearn.utils.validation.column_or_1d": ["numpy.shape", "<builtin>.len", "numpy.ravel", "warnings.warn", "<builtin>.ValueError"], "sklearn.utils.validation.check_array": ["warnings.warn", "<builtin>.isinstance", "<builtin>.getattr", "<builtin>.hasattr", "numpy.array", "<builtin>.ValueError", "scipy.sparse.issparse", "sklearn.utils.validation._ensure_no_complex_data", "sklearn.utils.validation._ensure_sparse_format", "warnings.catch_warnings", "numpy.issubdtype", "sklearn.utils.validation._assert_all_finite", "warnings.simplefilter", "numpy.asarray", "sklearn.utils.validation._num_samples", "numpy.may_share_memory", "<builtin>.set", "<builtin>.map", "<builtin>.sorted"], "sklearn.metrics.classification._check_set_wise_labels": ["<builtin>.ValueError", "<builtin>.str", "sklearn.metrics.classification._check_targets", "sklearn.utils.multiclass.unique_labels", "<builtin>.list", "warnings.warn", "<builtin>.len"], "sklearn.metrics.classification.multilabel_confusion_matrix": ["sklearn.metrics.classification._check_targets", "sklearn.utils.validation.column_or_1d", "sklearn.utils.validation.check_consistent_length", "<builtin>.ValueError", "sklearn.utils.multiclass.unique_labels", "<builtin>.len", "numpy.hstack", "numpy.setdiff1d", "sklearn.preprocessing.label.LabelEncoder.__default_init__", "sklearn.preprocessing.label.LabelEncoder.fit", "sklearn.preprocessing.label.LabelEncoder.transform", "numpy.searchsorted", "sklearn.utils.sparsefuncs.count_nonzero", "numpy.bincount", "numpy.zeros", "numpy.array_equal", "numpy.asarray", "numpy.max", "numpy.min", "numpy.array", "<builtin>.sum"], "sklearn.metrics.classification._prf_divide": ["numpy.any", "<builtin>.len", "warnings.warn"], "sklearn.metrics.ranking._binary_clf_curve": ["sklearn.utils.multiclass.type_of_target", "<builtin>.ValueError", "sklearn.utils.validation.check_consistent_length", "sklearn.utils.validation.column_or_1d", "sklearn.utils.validation.assert_all_finite", "numpy.unique", "numpy.array_equal", "numpy.argsort", "numpy.where", "numpy.diff", "sklearn.utils.extmath.stable_cumsum"], "sklearn.utils.multiclass.is_multilabel": ["<builtin>.hasattr", "numpy.asarray", "scipy.sparse.issparse", "<builtin>.isinstance", "numpy.unique", "<builtin>.len", "sklearn.utils.multiclass._is_integral_float"], "sklearn.utils.validation._assert_all_finite": ["sklearn._config.get_config", "numpy.asanyarray", "numpy.isfinite", "sklearn.utils.extmath._safe_accumulator_op", "<builtin>.ValueError", "numpy.dtype", "sklearn.utils.fixes._object_dtype_isnan", "numpy.isinf"], "sklearn.utils.validation._num_samples": ["<builtin>.hasattr", "<builtin>.callable", "<builtin>.TypeError", "numpy.asarray", "<builtin>.type", "<builtin>.isinstance", "<builtin>.len"], "sklearn.utils.validation._ensure_no_complex_data": ["<builtin>.hasattr", "<builtin>.ValueError"], "sklearn.utils.validation._ensure_sparse_format": ["<builtin>.isinstance", "sklearn.utils.validation._check_large_sparse", "<builtin>.TypeError", "<builtin>.len", "<builtin>.ValueError", "<builtin>.hasattr", "warnings.warn", "sklearn.utils.validation._assert_all_finite"], "sklearn.preprocessing.label.LabelEncoder.fit": ["sklearn.utils.validation.column_or_1d", "sklearn.preprocessing.label._encode"], "sklearn.preprocessing.label.LabelEncoder.transform": ["sklearn.utils.validation.check_is_fitted", "sklearn.utils.validation.column_or_1d", "sklearn.utils.validation._num_samples", "numpy.array", "sklearn.preprocessing.label._encode"], "sklearn.utils.sparsefuncs.count_nonzero": ["<builtin>.TypeError", "numpy.dot", "numpy.diff", "<builtin>.ValueError", "numpy.bincount", "numpy.repeat"], "sklearn.utils.validation.assert_all_finite": ["sklearn.utils.validation._assert_all_finite", "scipy.sparse.issparse"], "sklearn.utils.extmath.stable_cumsum": ["numpy.cumsum", "numpy.sum", "numpy.all", "warnings.warn", "numpy.isclose"], "sklearn.utils.multiclass._is_integral_float": ["numpy.all"], "sklearn.utils.extmath._safe_accumulator_op": ["numpy.issubdtype"], "sklearn.utils.fixes._object_dtype_isnan": ["numpy.frompyfunc"], "sklearn.utils.validation._check_large_sparse": ["<builtin>.getattr", "<builtin>.ValueError"], "sklearn.preprocessing.label._encode": ["sklearn.preprocessing.label._encode_numpy", "sklearn.preprocessing.label._encode_python", "<builtin>.TypeError"], "sklearn.utils.validation.check_is_fitted": ["<builtin>.hasattr", "<builtin>.TypeError", "<builtin>.isinstance", "sklearn.exceptions.NotFittedError.__default_init__", "<builtin>.type"], "sklearn.preprocessing.label._encode_numpy": ["numpy.unique", "sklearn.preprocessing.label._encode_check_unknown", "numpy.searchsorted", "<builtin>.ValueError", "<builtin>.str"], "sklearn.preprocessing.label._encode_python": ["<builtin>.sorted", "numpy.array", "<builtin>.set", "<builtin>.enumerate", "<builtin>.ValueError", "<builtin>.str"], "sklearn.preprocessing.label._encode_check_unknown": ["<builtin>.set", "<builtin>.list", "numpy.unique", "numpy.setdiff1d", "numpy.array", "numpy.ones", "numpy.in1d", "<builtin>.len"]}