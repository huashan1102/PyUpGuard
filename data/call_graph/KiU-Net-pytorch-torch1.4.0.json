{"torch.serialization.load": ["torch.serialization._open_file_like", "torch.serialization._is_zipfile", "torch.serialization._legacy_load", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._load"], "torch.hub.load_state_dict_from_url": ["os.getenv", "warnings.warn", "torch.hub._get_torch_home", "os.path.join", "os.makedirs", "urllib.parse.urlparse", "urlparse.urlparse", "os.path.basename", "os.path.exists", "sys.stderr.write", "torch.hub.download_url_to_file", "zipfile.is_zipfile", "zipfile.ZipFile", "<builtin>.len", "<builtin>.RuntimeError"], "torch.random.manual_seed": ["<builtin>.int", "torch._C.default_generator.manual_seed"], "torch.nn.utils.rnn.PackedSequence.__new__": ["torch.nn.utils.rnn.invert_permutation", "<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.super", "<builtin>.len"], "torch.nn.utils.rnn.PackedSequence.long": ["torch.nn.utils.rnn.PackedSequence.to"], "torch.storage._StorageBase.long": ["<builtin>.type"], "torch.nn.modules.instancenorm.InstanceNorm3d.__default_init__": ["torch.nn.modules.instancenorm._InstanceNorm.__init__", "torch.nn.modules.batchnorm._NormBase.__init__"], "torch.onnx.symbolic_opset8.ones_like": ["torch.onnx.symbolic_opset8._constant_fill"], "torch.nn.modules.activation.Sigmoid.__default_init__": ["torch.nn.modules.module.Module.__init__"], "torch.cuda.device_count": ["torch.cuda.is_available", "torch._C._cuda_getDeviceCount"], "torch.cuda.device.__init__": ["torch.cuda._utils._get_device_index"], "torch.nn.modules.activation.ReLU.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.nn.modules.normalization.GroupNorm.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.normalization.GroupNorm.reset_parameters"], "torch._jit_internal.boolean_dispatch": ["<builtin>.len", "<builtin>.RuntimeError"], "torch.utils.data.dataloader.DataLoader.__init__": ["<builtin>.ValueError", "<builtin>.isinstance", "torch.utils.data.dataloader._InfiniteConstantSampler.__init__"], "torch.onnx.symbolic_opset9.argmax": ["torch.onnx.symbolic_helper._is_none", "torch.onnx.symbolic_opset9.reshape", "torch.onnx.symbolic_helper._parse_arg"], "torch.nn.modules.activation.Softmax.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.nn.modules.pooling.MaxPool3d.__default_init__": ["torch.nn.modules.pooling._MaxPoolNd.__init__", "torch.nn.modules.module.Module.__init__"], "torch.cuda.random.manual_seed": ["<builtin>.int", "torch.cuda.current_device", "torch.cuda._lazy_call"], "torch.nn.parallel.data_parallel.DataParallel.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.list", "<builtin>.range", "<builtin>.map", "torch.cuda._utils._get_device_index", "torch.nn.parallel.data_parallel._check_balance", "<builtin>.len"], "torch.serialization.save": ["torch.serialization._open_zipfile_writer", "torch.serialization._save", "torch.serialization._open_file_like", "torch.serialization._legacy_save"], "torch.onnx.symbolic_opset8.zeros": ["torch.onnx.symbolic_opset8._constant_fill"], "torch.nn.modules.pooling.AvgPool2d.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.nn.modules.activation.PReLU.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__"], "torch.onnx.symbolic_opset8.ones": ["torch.onnx.symbolic_opset8._constant_fill"], "torch.nn.modules.conv.Conv3d.__init__": ["torch.nn.modules.utils._ntuple", "<builtin>.super"], "torch.distributions.constraints._Cat.__init__": ["<builtin>.all", "<builtin>.isinstance", "<builtin>.list", "<builtin>.len"], "torch.nn.modules.container.ModuleList.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.nn.modules.batchnorm.BatchNorm2d.__default_init__": ["torch.nn.modules.batchnorm._BatchNorm.__init__", "torch.nn.modules.batchnorm._NormBase.__init__"], "torch.nn.modules.upsampling.Upsample.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.type", "<builtin>.isinstance", "<builtin>.tuple", "<builtin>.float"], "torch.onnx.symbolic_opset9.randn": ["<builtin>.list", "torch.onnx.symbolic_helper._get_const"], "torch.nn.modules.loss.CrossEntropyLoss.__init__": ["torch.nn.modules.loss._WeightedLoss.__init__", "<builtin>.super"], "torch.nn.modules.pooling.MaxPool2d.__default_init__": ["torch.nn.modules.pooling._MaxPoolNd.__init__", "torch.nn.modules.module.Module.__init__"], "torch.onnx.symbolic_opset10.flip": ["torch.onnx.symbolic_helper._slice_helper", "<builtin>.len"], "torch.nn.modules.container.Sequential.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.isinstance", "<builtin>.enumerate", "<builtin>.len", "torch.nn.modules.module.Module.add_module", "<builtin>.str"], "torch.onnx.symbolic_opset8.zeros_like": ["torch.onnx.symbolic_opset8._constant_fill"], "torch.onnx.symbolic_opset10.topk": ["torch.onnx.symbolic_helper._topk_helper"], "torch.onnx.symbolic_opset11.topk": ["torch.onnx.symbolic_helper._topk_helper"], "torch.onnx.symbolic_opset9.topk": ["torch.onnx.symbolic_helper._unimplemented"], "torch.nn.modules.conv.ConvTranspose3d.__init__": ["torch.nn.modules.utils._ntuple", "<builtin>.super"], "torch.nn.modules.batchnorm.BatchNorm3d.__default_init__": ["torch.nn.modules.batchnorm._BatchNorm.__init__", "torch.nn.modules.batchnorm._NormBase.__init__"], "torch.autograd.profiler.FunctionEventAvg.add": ["<builtin>.isinstance"], "torch.nn.quantized.modules.functional_modules.FloatFunctional.__init__": ["<builtin>.super"], "torch.nn.quantized.modules.functional_modules.QFunctional.__init__": ["<builtin>.super"], "torch.onnx.symbolic_opset9.add": ["torch.onnx.symbolic_helper._unimplemented", "torch.onnx.symbolic_helper._scalar", "torch.onnx.symbolic_helper._maybe_get_scalar"], "torch.optim.adam.Adam.__init__": ["<builtin>.ValueError", "<builtin>.dict", "torch.optim.optimizer.Optimizer.__init__", "<builtin>.super"], "torch.nn.init.kaiming_normal_": ["torch.nn.init._calculate_correct_fan", "torch.nn.init.calculate_gain", "math.sqrt"], "torch.nn.modules.loss.BCELoss.__init__": ["torch.nn.modules.loss._WeightedLoss.__init__", "<builtin>.super"], "torch.onnx.symbolic_opset11.clamp": ["torch.onnx.symbolic_helper._is_none"], "torch.onnx.symbolic_opset9.clamp": ["torch.onnx.symbolic_helper._is_none", "torch.onnx.symbolic_opset9.clamp_max", "torch.onnx.symbolic_opset9.clamp_min", "torch.onnx.symbolic_helper._parse_arg"], "torch.nn.modules.conv.Conv2d.__init__": ["torch.nn.modules.utils._ntuple", "<builtin>.super"], "torch.serialization._open_file_like": ["torch.serialization._is_path", "torch.serialization._open_file.__init__", "torch.serialization._open_buffer_writer.__default_init__", "torch.serialization._open_buffer_reader.__init__", "<builtin>.RuntimeError"], "torch.serialization._is_zipfile": ["<builtin>.len", "<builtin>.zip", "<builtin>.ord"], "torch.serialization._legacy_load": ["torch.serialization._get_restore_location", "warnings.warn", "difflib.unified_diff", "torch.typename", "torch._utils_internal.get_source_lines_and_file", "<builtin>.open", "<builtin>.len", "<builtin>.isinstance", "contextlib.closing", "torch.serialization.mkdtemp", "<builtin>.all", "<builtin>.int", "tarfile.open", "<builtin>.range", "os.path.join", "torch.serialization.storage_to_tensor_type", "struct.unpack", "torch.serialization._maybe_decode_ascii", "<builtin>.RuntimeError", "torch.serialization._check_seekable", "torch.serialization._should_read_directly", "torch.serialization._is_zipfile"], "torch.serialization._open_zipfile_reader.__init__": ["<builtin>.super"], "torch.serialization._load": ["torch.serialization._get_restore_location", "struct.pack", "io.BytesIO", "<builtin>.isinstance", "torch.serialization._maybe_decode_ascii"], "torch.hub._get_torch_home": ["os.path.expanduser", "os.getenv", "os.path.join"], "torch.hub.download_url_to_file": ["urllib.request.urlopen", "urllib2.urlopen", "<builtin>.hasattr", "<builtin>.int", "<builtin>.len", "os.path.expanduser", "os.path.dirname", "tempfile.NamedTemporaryFile", "shutil.move", "os.path.exists", "hashlib.sha256", "torch.hub.tqdm.__init__", "tqdm.tqdm", "tqdm.auto.tqdm", "os.remove", "<builtin>.RuntimeError"], "torch.nn.utils.rnn.PackedSequence.to": ["torch.nn.utils.rnn.bind", "<builtin>.type", "<builtin>.filter"], "torch.nn.modules.instancenorm._InstanceNorm.__init__": ["torch.nn.modules.batchnorm._NormBase.__init__", "<builtin>.super"], "torch.nn.modules.batchnorm._NormBase.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.module.Module.register_buffer", "torch.nn.modules.batchnorm._NormBase.reset_parameters"], "torch.onnx.symbolic_opset8._constant_fill": ["torch.onnx.symbolic_helper._cast_func_template"], "torch.nn.modules.module.Module.__init__": ["collections.OrderedDict"], "torch.cuda.is_available": ["<builtin>.hasattr", "torch._C._cuda_isDriverSufficient", "torch._C._cuda_getDeviceCount"], "torch.cuda._utils._get_device_index": ["<builtin>.isinstance", "<builtin>.ValueError"], "torch.nn.modules.module.Module.register_parameter": ["<builtin>.AttributeError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.KeyError", "torch.typename", "<builtin>.hasattr", "<builtin>.ValueError"], "torch.nn.modules.normalization.GroupNorm.reset_parameters": ["torch.nn.init.ones_", "torch.nn.init.zeros_"], "torch.utils.data.dataloader._InfiniteConstantSampler.__init__": ["<builtin>.super"], "torch.onnx.symbolic_opset9.reshape": ["torch.onnx.symbolic_opset9.view"], "torch.onnx.symbolic_helper._parse_arg": ["torch.onnx.symbolic_helper._is_value", "<builtin>.int", "<builtin>.float", "<builtin>.RuntimeError", "<builtin>.bool", "<builtin>.str"], "torch.nn.modules.pooling._MaxPoolNd.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.cuda.current_device": ["torch.cuda._lazy_init", "torch._C._cuda_getDevice"], "torch.cuda._lazy_call": ["torch.cuda.is_initialized", "<builtin>.callable", "traceback.format_stack"], "torch.nn.parallel.data_parallel._check_balance": ["<builtin>.list", "<builtin>.map", "torch.cuda._utils._get_device_index", "<builtin>.min", "<builtin>.max", "<builtin>.enumerate", "warnings.warn", "operator.itemgetter"], "torch.serialization._open_zipfile_writer": ["torch.serialization._is_path"], "torch.serialization._save": ["torch.is_storage", "torch.serialization.normalize_storage_type", "<builtin>.str", "torch.serialization.location_tag", "<builtin>.type", "io.BytesIO", "<builtin>.len", "<builtin>.sorted"], "torch.serialization._legacy_save": ["<builtin>.isinstance", "<builtin>.RuntimeError", "<builtin>.issubclass", "torch.is_storage", "torch._utils_internal.get_source_lines_and_file", "torch.serialization.normalize_storage_type", "<builtin>.str", "torch.serialization.location_tag", "warnings.warn", "<builtin>.type", "<builtin>.dict", "<builtin>.sorted", "torch.serialization._should_read_directly"], "torch.nn.modules.utils._ntuple": ["<builtin>.isinstance", "<builtin>.tuple", "itertools.repeat"], "torch.nn.modules.batchnorm._BatchNorm.__init__": ["torch.nn.modules.batchnorm._NormBase.__init__", "<builtin>.super"], "torch.onnx.symbolic_helper._get_const": ["torch.onnx.symbolic_helper._is_value", "<builtin>.RuntimeError", "torch.onnx.symbolic_helper._parse_arg"], "torch.nn.modules.loss._WeightedLoss.__init__": ["torch.nn.modules.loss._Loss.__init__", "<builtin>.super", "torch.nn.modules.module.Module.register_buffer"], "torch.onnx.symbolic_helper._slice_helper": ["torch.onnx.symbolic_opset9._slice", "torch.onnx.symbolic_opset10._slice"], "torch.nn.modules.module.Module.add_module": ["<builtin>.TypeError", "<builtin>.isinstance", "torch.typename", "<builtin>.hasattr", "<builtin>.KeyError"], "torch.onnx.symbolic_helper._topk_helper": ["torch.onnx.symbolic_helper._unimplemented", "torch.onnx.symbolic_helper._is_value"], "torch.onnx.symbolic_helper._unimplemented": ["warnings.warn"], "torch.onnx.symbolic_helper._maybe_get_scalar": ["torch.onnx.symbolic_helper._maybe_get_const", "<builtin>.isinstance"], "torch.optim.optimizer.Optimizer.__init__": ["<builtin>.isinstance", "<builtin>.TypeError", "torch.typename", "collections.defaultdict", "<builtin>.list", "<builtin>.len", "<builtin>.ValueError", "torch.optim.optimizer.Optimizer.add_param_group"], "torch.nn.init._calculate_correct_fan": ["<builtin>.ValueError", "torch.nn.init._calculate_fan_in_and_fan_out"], "torch.nn.init.calculate_gain": ["math.sqrt", "<builtin>.ValueError", "<builtin>.isinstance"], "torch.serialization._is_path": ["<builtin>.isinstance"], "torch.serialization._open_file.__init__": ["<builtin>.open", "<builtin>.super"], "torch.serialization._open_buffer_writer.__default_init__": ["torch.serialization._opener.__init__"], "torch.serialization._open_buffer_reader.__init__": ["torch.serialization._opener.__init__", "<builtin>.super", "torch.serialization._check_seekable"], "torch.serialization._get_restore_location": ["<builtin>.isinstance", "torch.serialization.default_restore_location", "<builtin>.str"], "torch": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.type"], "torch._utils_internal.get_source_lines_and_file": ["inspect.getsourcefile", "inspect.getsourcelines", "<builtin>.OSError"], "torch.serialization.mkdtemp": ["tempfile.mkdtemp", "shutil.rmtree"], "torch.serialization.storage_to_tensor_type": ["<builtin>.type", "torch._utils._import_dotted_name", "<builtin>.getattr"], "torch.serialization._maybe_decode_ascii": ["<builtin>.isinstance"], "torch.serialization._check_seekable": ["<builtin>.str", "<builtin>.type"], "torch.serialization._should_read_directly": ["torch.serialization._is_compressed_file"], "torch.nn.modules.module.Module.register_buffer": ["<builtin>.AttributeError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.KeyError", "torch.typename", "<builtin>.hasattr"], "torch.nn.modules.batchnorm._NormBase.reset_parameters": ["torch.nn.modules.batchnorm._NormBase.reset_running_stats", "torch.nn.init.ones_", "torch.nn.init.zeros_"], "torch.nn.init.ones_": ["torch.nn.init._no_grad_fill_"], "torch.nn.init.zeros_": ["torch.nn.init._no_grad_zero_"], "torch.onnx.symbolic_opset9.view": ["torch.onnx.symbolic_helper._maybe_get_const", "torch.onnx.symbolic_helper._is_value", "<builtin>.len"], "torch.onnx.symbolic_helper._is_value": ["<builtin>.isinstance"], "torch.cuda._lazy_init": ["torch.cuda.is_initialized", "<builtin>.hasattr", "torch.cuda._check_driver", "torch._C._cuda_init", "torch.cuda._load_cudart", "<builtin>.RuntimeError", "<builtin>.delattr", "torch._six.raise_from", "<builtin>.str", "torch.cuda.DeferredCudaCallError.__default_init__"], "torch.serialization.normalize_storage_type": ["<builtin>.getattr"], "torch.serialization.location_tag": ["<builtin>.RuntimeError", "torch.typename"], "torch.nn.modules.loss._Loss.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn._reduction.legacy_get_string"], "torch.onnx.symbolic_opset9._slice": ["<builtin>.len"], "torch.onnx.symbolic_opset10._slice": ["<builtin>.len"], "torch.onnx.symbolic_helper._maybe_get_const": ["torch.onnx.symbolic_helper._is_value", "torch.onnx.symbolic_helper._parse_arg"], "torch.optim.optimizer.Optimizer.add_param_group": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.list", "<builtin>.ValueError", "torch.typename", "<builtin>.set"], "torch.nn.init._calculate_fan_in_and_fan_out": ["<builtin>.ValueError"], "torch.serialization.default_restore_location": ["<builtin>.RuntimeError", "torch.typename"], "torch._utils._import_dotted_name": ["<builtin>.__import__", "<builtin>.getattr"], "torch.cuda._check_driver": ["<builtin>.hasattr", "<builtin>.AssertionError", "torch._C._cuda_isDriverSufficient", "torch._C._cuda_getDriverVersion", "<builtin>.str"], "torch.cuda._load_cudart": ["platform.system", "torch.cuda.find_cuda_windows_lib", "ctypes.cdll.LoadLibrary", "<builtin>.hasattr", "<builtin>.RuntimeError"], "torch.nn._reduction.legacy_get_string": ["warnings.warn"], "torch.cuda.find_cuda_windows_lib": ["os.environ.copy", "os.path.join", "os.path.dirname", "subprocess.Popen", "subprocess.Popen.communicate", "<builtin>.len", "os.path.basename", "<builtin>.str", "ctypes.cdll.LoadLibrary", "os.path.splitext"]}