{"torch.nn.modules.rnn.LSTM.__init__": ["torch.nn.modules.rnn.RNNBase.__init__", "<builtin>.super"], "torch.nn.modules.linear.Linear.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.linear.Linear.reset_parameters"], "torch.onnx.symbolic_opset11.arange": ["torch.onnx.symbolic_helper._maybe_get_const", "<builtin>.len", "torch.onnx.symbolic_helper._arange_cast_helper", "<builtin>.NotImplementedError", "<builtin>.str"], "torch.onnx.symbolic_opset9.arange": ["torch.onnx.symbolic_helper._maybe_get_const", "torch.onnx.symbolic_helper._is_value", "<builtin>.len", "torch.onnx.symbolic_opset9.nonzero", "torch.onnx.symbolic_opset9.ones", "<builtin>.NotImplementedError", "<builtin>.str"], "torch.nn.modules.conv.Conv2d.__init__": ["torch.nn.modules.utils._ntuple", "<builtin>.super"], "torch.nn.functional._pad": ["torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "<builtin>.type", "<builtin>.len", "<builtin>.NotImplementedError", "torch.nn.functional._pad_circular"], "torch.onnx.symbolic_opset8.zeros": ["torch.onnx.symbolic_opset8._constant_fill"], "torch.serialization.save": ["torch.serialization._check_dill_version", "torch.serialization._open_file_like", "torch.serialization._legacy_save", "torch.serialization._open_zipfile_writer", "torch.serialization._save"], "torch.distributions.constraints._Cat.__init__": ["<builtin>.all", "<builtin>.isinstance", "<builtin>.list", "<builtin>.len"], "torch.distributions.constraints._Stack.__init__": ["<builtin>.all", "<builtin>.isinstance", "<builtin>.list"], "torch.cuda.is_available": ["<builtin>.hasattr", "torch._C._cuda_isDriverSufficient", "torch._C._cuda_getDeviceCount"], "torch.distributions.bernoulli.Bernoulli.__init__": ["<builtin>.ValueError", "<builtin>.isinstance", "torch.distributions.utils.broadcast_all", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.beta.Beta.__init__": ["<builtin>.isinstance", "torch.distributions.utils.broadcast_all", "<builtin>.float", "torch.distributions.dirichlet.Dirichlet.__init__", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.binomial.Binomial.__init__": ["<builtin>.ValueError", "torch.distributions.utils.broadcast_all", "<builtin>.isinstance", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.categorical.Categorical.__init__": ["<builtin>.ValueError", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.categorical.Categorical.mean": ["torch.distributions.distribution.Distribution._extended_shape"], "torch.distributions.cauchy.Cauchy.__init__": ["torch.distributions.utils.broadcast_all", "<builtin>.isinstance", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.cauchy.Cauchy.mean": ["torch.distributions.distribution.Distribution._extended_shape"], "torch.distributions.continuous_bernoulli.ContinuousBernoulli.__init__": ["<builtin>.ValueError", "<builtin>.isinstance", "torch.distributions.utils.broadcast_all", "torch.distributions.utils.clamp_probs", "<builtin>.getattr", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean": ["torch.distributions.continuous_bernoulli.ContinuousBernoulli._cut_probs", "torch.distributions.continuous_bernoulli.ContinuousBernoulli._outside_unstable_region"], "torch.distributions.dirichlet.Dirichlet.__init__": ["<builtin>.ValueError", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.distribution.Distribution.__init__": ["torch.distributions.constraints.is_dependent", "<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.getattr", "<builtin>.type", "<builtin>.super"], "torch.distributions.exponential.Exponential.__init__": ["torch.distributions.utils.broadcast_all", "<builtin>.isinstance", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.fishersnedecor.FisherSnedecor.__init__": ["torch.distributions.utils.broadcast_all", "torch.distributions.gamma.Gamma.__init__", "<builtin>.isinstance", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.gamma.Gamma.__init__": ["torch.distributions.utils.broadcast_all", "<builtin>.isinstance", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.geometric.Geometric.__init__": ["<builtin>.ValueError", "torch.distributions.utils.broadcast_all", "<builtin>.isinstance", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.gumbel.Gumbel.__init__": ["torch.distributions.utils.broadcast_all", "<builtin>.isinstance", "torch.distributions.uniform.Uniform.__init__", "torch.distributions.transforms.AffineTransform.__init__", "torch.distributions.transforms.ExpTransform.__default_init__", "torch.distributions.transformed_distribution.TransformedDistribution.__init__", "<builtin>.super"], "torch.distributions.half_cauchy.HalfCauchy.__init__": ["torch.distributions.cauchy.Cauchy.__init__", "torch.distributions.transforms.AbsTransform.__default_init__", "<builtin>.super"], "torch.distributions.half_normal.HalfNormal.__init__": ["torch.distributions.normal.Normal.__init__", "torch.distributions.transforms.AbsTransform.__default_init__", "<builtin>.super"], "torch.distributions.half_normal.HalfNormal.mean": ["math.sqrt"], "torch.distributions.independent.Independent.__init__": ["<builtin>.len", "<builtin>.ValueError", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.laplace.Laplace.__init__": ["torch.distributions.utils.broadcast_all", "<builtin>.isinstance", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.log_normal.LogNormal.__init__": ["torch.distributions.normal.Normal.__init__", "torch.distributions.transforms.ExpTransform.__default_init__", "<builtin>.super"], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.__init__": ["<builtin>.ValueError", "torch.distributions.lowrank_multivariate_normal._batch_capacitance_tril", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.mixture_same_family.MixtureSameFamily.__init__": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.zip", "<builtin>.reversed", "<builtin>.len", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.mixture_same_family.MixtureSameFamily.mean": ["torch.distributions.mixture_same_family.MixtureSameFamily._pad_mixture_dimensions"], "torch.distributions.multinomial.Multinomial.__init__": ["<builtin>.isinstance", "<builtin>.NotImplementedError", "torch.distributions.categorical.Categorical.__init__", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.multivariate_normal.MultivariateNormal.__init__": ["<builtin>.ValueError", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super", "torch.distributions.multivariate_normal._precision_to_scale_tril"], "torch.distributions.negative_binomial.NegativeBinomial.__init__": ["<builtin>.ValueError", "torch.distributions.utils.broadcast_all", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.normal.Normal.__init__": ["torch.distributions.utils.broadcast_all", "<builtin>.isinstance", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.one_hot_categorical.OneHotCategorical.__init__": ["torch.distributions.categorical.Categorical.__init__", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.pareto.Pareto.__init__": ["torch.distributions.utils.broadcast_all", "torch.distributions.exponential.Exponential.__init__", "torch.distributions.transforms.ExpTransform.__default_init__", "torch.distributions.transforms.AffineTransform.__init__", "torch.distributions.transformed_distribution.TransformedDistribution.__init__", "<builtin>.super"], "torch.distributions.poisson.Poisson.__init__": ["torch.distributions.utils.broadcast_all", "<builtin>.isinstance", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.studentT.StudentT.__init__": ["torch.distributions.utils.broadcast_all", "torch.distributions.chi2.Chi2.__init__", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.uniform.Uniform.__init__": ["torch.distributions.utils.broadcast_all", "<builtin>.isinstance", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super", "<builtin>.ValueError"], "torch.distributions.von_mises.VonMises.__init__": ["torch.distributions.utils.broadcast_all", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.weibull.Weibull.__init__": ["torch.distributions.utils.broadcast_all", "torch.distributions.exponential.Exponential.__init__", "torch.distributions.transforms.PowerTransform.__init__", "torch.distributions.transforms.AffineTransform.__init__", "torch.distributions.transformed_distribution.TransformedDistribution.__init__", "<builtin>.super"], "torch.nn.modules.activation.PReLU.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__"], "torch.distributed.distributed_c10d.all_reduce": ["torch.distributed.distributed_c10d._check_single_tensor", "torch.distributed.distributed_c10d._rank_not_in_group", "torch.distributed.distributed_c10d._check_default_pg"], "torch.onnx.symbolic_opset9.index_select": ["torch.onnx.symbolic_helper._maybe_get_scalar", "torch.onnx.symbolic_helper._is_value"], "torch.functional.einsum": ["<builtin>.any", "torch._overrides.has_torch_function", "torch._overrides.handle_torch_function", "<builtin>.type", "<builtin>.isinstance", "torch.functional.einsum", "<builtin>.len"], "torch.random.manual_seed": ["<builtin>.int", "torch._C.default_generator.manual_seed"], "torch.distributed.distributed_c10d.barrier": ["torch.distributed.distributed_c10d._rank_not_in_group", "torch.distributed.distributed_c10d._check_default_pg"], "torch.cuda.current_device": ["torch.cuda._lazy_init", "torch._C._cuda_getDevice"], "torch.onnx.symbolic_opset8.zeros_like": ["torch.onnx.symbolic_opset8._constant_fill"], "torch.onnx.symbolic_opset9.unsqueeze": ["warnings.warn", "torch.onnx.symbolic_helper._unimplemented", "<builtin>.str"], "torch.onnx.symbolic_opset12.argmax": ["torch.onnx.symbolic_helper._is_none", "torch.onnx.symbolic_opset9.reshape", "torch.onnx.symbolic_helper._parse_arg"], "torch.onnx.symbolic_opset9.argmax": ["torch.onnx.symbolic_helper._is_none", "torch.onnx.symbolic_opset9.reshape", "torch.onnx.symbolic_helper._parse_arg"], "torch.nn.modules.conv.Conv1d.__init__": ["torch.nn.modules.utils._ntuple", "<builtin>.super"], "torch.nn.modules.normalization.GroupNorm.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "torch.nn.parameter.Parameter.__new__", "torch.nn.modules.module.Module.register_parameter", "torch.nn.modules.normalization.GroupNorm.reset_parameters"], "torch.nn.modules.container.ModuleList.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.nn.modules.pooling.AvgPool2d.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.cuda.set_device": ["torch.cuda._utils._get_device_index", "torch._C._cuda_setDevice"], "torch.cuda.device_count": ["torch.cuda.is_available", "torch._C._cuda_getDeviceCount"], "torch.optim.adam.Adam.__init__": ["<builtin>.ValueError", "<builtin>.dict", "torch.optim.optimizer.Optimizer.__init__", "<builtin>.super"], "torch.serialization.load": ["torch.serialization._check_dill_version", "torch.serialization._open_file_like", "torch.serialization._is_zipfile", "torch.serialization._legacy_load", "torch.serialization._open_zipfile_reader.__init__", "torch.serialization._is_torchscript_zip", "torch.serialization._load", "warnings.warn"], "torch.onnx.symbolic_opset7.max": ["warnings.warn", "torch.onnx.symbolic_opset9.max"], "torch.onnx.symbolic_opset9.max": ["torch.onnx.symbolic_helper._get_const"], "torch._linalg_utils.transpose": ["<builtin>.len"], "torch.onnx.symbolic_opset9.transpose": ["<builtin>.list", "<builtin>.range", "<builtin>.RuntimeError"], "torch.nn.utils.clip_grad.clip_grad_norm_": ["<builtin>.isinstance", "<builtin>.list", "<builtin>.filter", "<builtin>.float", "<builtin>.len", "<builtin>.max"], "torch.distributed.distributed_c10d.init_process_group": ["<builtin>.isinstance", "<builtin>.RuntimeError", "torch.distributed.distributed_c10d.Backend.__new__", "torch.distributed.distributed_c10d._new_process_group_helper", "warnings.warn", "torch.distributed.rendezvous.rendezvous", "<builtin>.next", "<builtin>.range"], "torch.testing._internal.hypothesis_utils.tensor": ["<builtin>.isinstance", "hypothesis.strategies.sampled_from", "hypothesis.assume", "torch.testing._internal.hypothesis_utils.floats", "hypothesis.extra.numpy.arrays", "numpy.isnan", "numpy.isinf", "torch.testing._internal.hypothesis_utils._get_valid_min_max", "torch.testing._internal.common_quantized._calculate_dynamic_qparams"], "torch.nn.quantized.modules.functional_modules.FloatFunctional.__init__": ["<builtin>.super"], "torch.nn.quantized.modules.functional_modules.QFunctional.__init__": ["<builtin>.super"], "torch.quantization._numeric_suite.Shadow.__init__": ["<builtin>.super", "torch.quantization._numeric_suite.Logger.__init__"], "torch.nn.modules.rnn.RNNBase.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super", "<builtin>.float", "<builtin>.isinstance", "<builtin>.ValueError", "warnings.warn", "<builtin>.range", "torch.nn.parameter.Parameter.__new__", "<builtin>.zip", "<builtin>.setattr", "<builtin>.hasattr", "<builtin>.getattr", "torch.nn.modules.rnn.RNNBase.flatten_parameters", "torch.nn.modules.rnn.RNNBase.reset_parameters"], "torch.nn.modules.module.Module.__init__": ["collections.OrderedDict", "<builtin>.set"], "torch.nn.modules.module.Module.register_parameter": ["<builtin>.AttributeError", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.KeyError", "torch.typename", "<builtin>.hasattr", "<builtin>.ValueError"], "torch.nn.modules.linear.Linear.reset_parameters": ["torch.nn.init.kaiming_uniform_", "math.sqrt", "torch.nn.init._calculate_fan_in_and_fan_out", "torch.nn.init.uniform_"], "torch.onnx.symbolic_helper._maybe_get_const": ["torch.onnx.symbolic_helper._is_value", "torch.onnx.symbolic_helper._parse_arg"], "torch.onnx.symbolic_helper._arange_cast_helper": ["torch.onnx.symbolic_helper._is_value", "torch.onnx.symbolic_helper._is_none"], "torch.onnx.symbolic_helper._is_value": ["<builtin>.isinstance"], "torch.onnx.symbolic_opset9.nonzero": ["torch.onnx.symbolic_opset9.t"], "torch.nn.modules.utils._ntuple": ["<builtin>.isinstance", "<builtin>.tuple", "itertools.repeat"], "torch._overrides.has_torch_function": ["<builtin>.any", "<builtin>.hasattr"], "torch._overrides.handle_torch_function": ["torch._overrides._get_overloaded_args", "<builtin>.tuple", "<builtin>.map", "<builtin>.TypeError", "<builtin>.list"], "torch.nn.functional._pad_circular": ["<builtin>.len"], "torch.onnx.symbolic_opset8._constant_fill": ["torch.onnx.symbolic_helper._cast_func_template"], "torch.serialization._check_dill_version": ["torch.serialization.check_module_version_greater_or_equal", "<builtin>.ValueError", "<builtin>.str"], "torch.serialization._open_file_like": ["torch.serialization._is_path", "torch.serialization._open_file.__init__", "torch.serialization._open_buffer_writer.__default_init__", "torch.serialization._open_buffer_reader.__init__", "<builtin>.RuntimeError"], "torch.serialization._legacy_save": ["<builtin>.isinstance", "<builtin>.issubclass", "torch.is_storage", "torch._utils_internal.get_source_lines_and_file", "torch.serialization.normalize_storage_type", "<builtin>.str", "torch.serialization.location_tag", "warnings.warn", "<builtin>.type", "<builtin>.dict", "<builtin>.sorted", "torch.serialization._should_read_directly"], "torch.serialization._open_zipfile_writer": ["torch.serialization._is_path"], "torch.serialization._save": ["torch.is_storage", "torch.serialization.normalize_storage_type", "<builtin>.str", "torch.serialization.location_tag", "<builtin>.type", "io.BytesIO", "<builtin>.len", "<builtin>.sorted", "torch.serialization._should_read_directly"], "torch.distributions.utils.broadcast_all": ["<builtin>.all", "<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.dict"], "torch.distributions.distribution.Distribution._extended_shape": ["<builtin>.isinstance"], "torch.distributions.continuous_bernoulli.ContinuousBernoulli._cut_probs": ["torch.distributions.continuous_bernoulli.ContinuousBernoulli._outside_unstable_region"], "torch.distributions.constraints.is_dependent": ["<builtin>.isinstance"], "torch.distributions.transforms.AffineTransform.__init__": ["torch.distributions.transforms.Transform.__init__", "<builtin>.super"], "torch.distributions.transforms.ExpTransform.__default_init__": ["torch.distributions.transforms.Transform.__init__"], "torch.distributions.transformed_distribution.TransformedDistribution.__init__": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.all", "<builtin>.max", "<builtin>.len", "torch.distributions.distribution.Distribution.__init__", "<builtin>.super"], "torch.distributions.transforms.AbsTransform.__default_init__": ["torch.distributions.transforms.Transform.__init__"], "torch.distributions.chi2.Chi2.__init__": ["torch.distributions.gamma.Gamma.__init__", "<builtin>.super"], "torch.distributions.transforms.PowerTransform.__init__": ["torch.distributions.transforms.Transform.__init__", "<builtin>.super", "torch.distributions.utils.broadcast_all"], "torch.distributed.distributed_c10d._check_single_tensor": ["<builtin>.isinstance", "<builtin>.RuntimeError"], "torch.onnx.symbolic_helper._maybe_get_scalar": ["torch.onnx.symbolic_helper._maybe_get_const", "<builtin>.isinstance"], "torch.cuda._lazy_init": ["torch.cuda.is_initialized", "<builtin>.hasattr", "torch.cuda._check_driver", "torch._C._cuda_init", "<builtin>.RuntimeError", "<builtin>.AssertionError", "<builtin>.delattr", "torch._six.raise_from", "<builtin>.str", "torch.cuda.DeferredCudaCallError.__default_init__"], "torch.onnx.symbolic_helper._unimplemented": ["warnings.warn"], "torch.onnx.symbolic_opset9.reshape": ["torch.onnx.symbolic_opset9.view"], "torch.onnx.symbolic_helper._parse_arg": ["torch.onnx.symbolic_helper._is_value", "<builtin>.int", "<builtin>.float", "<builtin>.RuntimeError", "<builtin>.bool", "<builtin>.str"], "torch.nn.modules.normalization.GroupNorm.reset_parameters": ["torch.nn.init.ones_", "torch.nn.init.zeros_"], "torch.cuda._utils._get_device_index": ["<builtin>.isinstance", "<builtin>.ValueError"], "torch.optim.optimizer.Optimizer.__init__": ["<builtin>.isinstance", "<builtin>.TypeError", "torch.typename", "collections.defaultdict", "<builtin>.list", "<builtin>.len", "<builtin>.ValueError", "torch.optim.optimizer.Optimizer.add_param_group"], "torch.serialization._is_zipfile": ["<builtin>.len"], "torch.serialization._legacy_load": ["torch.serialization._get_restore_location", "warnings.warn", "difflib.unified_diff", "torch._utils_internal.get_source_lines_and_file", "torch.typename", "<builtin>.open", "<builtin>.len", "<builtin>.isinstance", "contextlib.closing", "torch.serialization.mkdtemp", "<builtin>.all", "<builtin>.int", "tarfile.open", "<builtin>.range", "os.path.join", "torch.serialization.storage_to_tensor_type", "struct.unpack", "torch.serialization._maybe_decode_ascii", "<builtin>.RuntimeError", "torch.serialization._check_seekable", "torch.serialization._should_read_directly", "torch.serialization._is_zipfile", "<builtin>.hasattr", "<builtin>.type"], "torch.serialization._open_zipfile_reader.__init__": ["<builtin>.super"], "torch.serialization._is_torchscript_zip": ["<builtin>.len"], "torch.serialization._load": ["torch.serialization._get_restore_location", "<builtin>.isinstance", "torch.serialization._maybe_decode_ascii", "io.BytesIO"], "torch.onnx.symbolic_helper._get_const": ["torch.onnx.symbolic_helper._is_value", "<builtin>.RuntimeError", "torch.onnx.symbolic_helper._parse_arg"], "torch.distributed.distributed_c10d.Backend.__new__": ["<builtin>.isinstance", "<builtin>.ValueError", "<builtin>.getattr"], "torch.distributed.distributed_c10d._new_process_group_helper": ["<builtin>.str", "<builtin>.RuntimeError", "<builtin>.isinstance", "<builtin>.len", "torch.distributed.distributed_c10d.Backend.__new__", "torch.distributed.distributed_c10d.is_mpi_available", "torch.distributed.distributed_c10d.is_nccl_available", "<builtin>.getattr"], "torch.distributed.rendezvous.rendezvous": ["<builtin>.isinstance", "<builtin>.RuntimeError", "<builtin>.type", "urlparse.urlparse", "urllib.parse.urlparse", "<builtin>.dict", "urlparse.urlunparse", "urllib.parse.urlunparse", "<builtin>.filter"], "torch.testing._internal.hypothesis_utils.floats": ["torch.testing._internal.hypothesis_utils._floats_wrapper"], "torch.testing._internal.hypothesis_utils._get_valid_min_max": ["<builtin>.max", "<builtin>.min", "numpy.float32"], "torch.testing._internal.common_quantized._calculate_dynamic_qparams": ["<builtin>.isinstance", "<builtin>.max", "<builtin>.min", "<builtin>.round", "numpy.finfo", "<builtin>.float", "<builtin>.int"], "torch.quantization._numeric_suite.Logger.__init__": ["<builtin>.super"], "torch.nn.modules.rnn.RNNBase.flatten_parameters": ["<builtin>.len", "<builtin>.isinstance", "<builtin>.set", "torch.backends.cudnn.rnn.get_cudnn_mode", "<builtin>.bool"], "torch.nn.modules.rnn.RNNBase.reset_parameters": ["math.sqrt", "torch.nn.modules.module.Module.parameters", "torch.nn.init.uniform_"], "torch": ["<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.type"], "torch.nn.init.kaiming_uniform_": ["torch.nn.init._calculate_correct_fan", "torch.nn.init.calculate_gain", "math.sqrt"], "torch.nn.init._calculate_fan_in_and_fan_out": ["<builtin>.ValueError"], "torch.nn.init.uniform_": ["torch.nn.init._no_grad_uniform_"], "torch._overrides._get_overloaded_args": ["<builtin>.type", "<builtin>.hasattr", "<builtin>.len", "<builtin>.enumerate", "<builtin>.issubclass"], "torch.serialization.check_module_version_greater_or_equal": ["<builtin>.tuple", "<builtin>.RuntimeError", "warnings.warn", "<builtin>.type", "<builtin>.enumerate", "<builtin>.str"], "torch.serialization._is_path": ["<builtin>.isinstance"], "torch.serialization._open_file.__init__": ["<builtin>.open", "<builtin>.super"], "torch.serialization._open_buffer_writer.__default_init__": ["torch.serialization._opener.__init__"], "torch.serialization._open_buffer_reader.__init__": ["torch.serialization._opener.__init__", "<builtin>.super", "torch.serialization._check_seekable"], "torch._utils_internal.get_source_lines_and_file": ["inspect.getsourcefile", "inspect.getsourcelines", "<builtin>.OSError"], "torch.serialization.normalize_storage_type": ["<builtin>.getattr"], "torch.serialization.location_tag": ["<builtin>.RuntimeError", "torch.typename"], "torch.serialization._should_read_directly": ["torch.serialization._is_compressed_file"], "torch.distributions.transforms.Transform.__init__": ["<builtin>.ValueError", "<builtin>.super"], "torch.cuda._check_driver": ["<builtin>.hasattr", "<builtin>.AssertionError", "torch._C._cuda_isDriverSufficient", "torch._C._cuda_getDriverVersion", "<builtin>.str"], "torch.onnx.symbolic_opset9.view": ["torch.onnx.symbolic_helper._maybe_get_const", "torch.onnx.symbolic_helper._is_value", "<builtin>.len"], "torch.nn.init.ones_": ["torch.nn.init._no_grad_fill_"], "torch.nn.init.zeros_": ["torch.nn.init._no_grad_zero_"], "torch.optim.optimizer.Optimizer.add_param_group": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.list", "<builtin>.ValueError", "torch.typename", "<builtin>.set"], "torch.serialization._get_restore_location": ["<builtin>.isinstance", "torch.serialization.default_restore_location", "<builtin>.str"], "torch.serialization.mkdtemp": ["tempfile.mkdtemp", "shutil.rmtree"], "torch.serialization.storage_to_tensor_type": ["<builtin>.type", "torch._utils._import_dotted_name", "<builtin>.getattr"], "torch.serialization._maybe_decode_ascii": ["<builtin>.isinstance"], "torch.serialization._check_seekable": ["<builtin>.str", "<builtin>.type"], "torch.testing._internal.hypothesis_utils._floats_wrapper": ["<builtin>.len", "hypothesis.strategies.floats"], "torch.backends.cudnn.rnn.get_cudnn_mode": ["<builtin>.int", "<builtin>.Exception"], "torch.nn.modules.module.Module.parameters": ["torch.nn.modules.module.Module.named_parameters"], "torch.nn.init._calculate_correct_fan": ["<builtin>.ValueError", "torch.nn.init._calculate_fan_in_and_fan_out"], "torch.nn.init.calculate_gain": ["math.sqrt", "<builtin>.ValueError", "<builtin>.isinstance"], "torch.serialization.default_restore_location": ["<builtin>.RuntimeError", "torch.typename"], "torch._utils._import_dotted_name": ["<builtin>.__import__", "<builtin>.getattr"], "torch.nn.modules.module.Module.named_parameters": ["torch.nn.modules.module.Module._named_members"], "torch.nn.modules.module.Module._named_members": ["<builtin>.set", "torch.nn.modules.module.Module.named_modules"], "torch.nn.modules.module.Module.named_modules": ["<builtin>.set", "collections.OrderedDict.items"]}