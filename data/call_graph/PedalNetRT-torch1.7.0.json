{"torch.optim.adam.Adam.__init__": ["<builtin>.ValueError", "<builtin>.dict", "torch.optim.optimizer.Optimizer.__init__", "<builtin>.super"], "torch.nn.functional.tanh": ["warnings.warn"], "torch.nn.modules.conv.Conv1d.__init__": ["torch.nn.modules.utils._ntuple", "<builtin>.super"], "torch.autograd.grad_mode.no_grad.__init__": ["<builtin>.super"], "torch.utils.data.dataloader.DataLoader.__init__": ["<builtin>.ValueError", "<builtin>.isinstance", "torch.utils.data.dataloader._InfiniteConstantSampler.__init__"], "torch.nn.functional.sigmoid": ["warnings.warn"], "torch.utils.data.dataset.TensorDataset.__init__": ["<builtin>.all"], "torch.distributions.constraints._Cat.__init__": ["<builtin>.all", "<builtin>.isinstance", "<builtin>.list", "<builtin>.len"], "torch.nn.modules.container.ModuleList.__init__": ["torch.nn.modules.module.Module.__init__", "<builtin>.super"], "torch.functional.split": ["torch.overrides.has_torch_function", "torch.overrides.handle_torch_function", "<builtin>.type"], "torch.distributions.constraints._Stack.__init__": ["<builtin>.all", "<builtin>.isinstance", "<builtin>.list"], "torch.optim.optimizer.Optimizer.__init__": ["<builtin>.isinstance", "<builtin>.TypeError", "torch.typename", "collections.defaultdict", "<builtin>.list", "<builtin>.len", "<builtin>.ValueError", "torch.optim.optimizer.Optimizer.add_param_group"], "torch.nn.modules.utils._ntuple": ["<builtin>.isinstance", "<builtin>.tuple", "itertools.repeat"], "torch.utils.data.dataloader._InfiniteConstantSampler.__init__": ["<builtin>.super"], "torch.nn.modules.module.Module.__init__": ["collections.OrderedDict", "<builtin>.set"], "torch.overrides.has_torch_function": ["torch._C._is_torch_function_enabled", "<builtin>.any", "<builtin>.type", "<builtin>.getattr"], "torch.overrides.handle_torch_function": ["torch.overrides._get_overloaded_args", "<builtin>.tuple", "<builtin>.map", "<builtin>.TypeError", "<builtin>.list"], "torch": ["<builtin>.isinstance", "<builtin>.hasattr"], "torch.optim.optimizer.Optimizer.add_param_group": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.list", "<builtin>.ValueError", "torch.typename", "<builtin>.len", "warnings.warn", "<builtin>.set"], "torch.overrides._get_overloaded_args": ["<builtin>.type", "<builtin>.hasattr", "<builtin>.len", "<builtin>.enumerate", "<builtin>.issubclass"]}