{"os": ["os.getenv", "os.path.join", "os.makedirs", "os.path.basename", "os.path.exists", "os.path.expanduser", "os.path.dirname", "os.remove", "os.environ.copy", "os.path.splitext"], "warnings": ["warnings.warn"], "urllib": ["urllib.parse.urlparse", "urllib.request.urlopen"], "urlparse": ["urlparse.urlparse"], "sys": ["sys.stderr.write"], "zipfile": ["zipfile.is_zipfile", "zipfile.ZipFile"], "<builtin>": ["<builtin>.len", "<builtin>.RuntimeError", "<builtin>.int", "<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.super", "<builtin>.type", "<builtin>.list", "<builtin>.range", "<builtin>.map", "<builtin>.all", "<builtin>.tuple", "<builtin>.float", "<builtin>.enumerate", "<builtin>.str", "<builtin>.dict", "<builtin>.zip", "<builtin>.ord", "<builtin>.open", "<builtin>.hasattr", "<builtin>.filter", "<builtin>.AttributeError", "<builtin>.TypeError", "<builtin>.KeyError", "<builtin>.bool", "<builtin>.callable", "<builtin>.min", "<builtin>.max", "<builtin>.sorted", "<builtin>.issubclass", "<builtin>.OSError", "<builtin>.getattr", "<builtin>.delattr", "<builtin>.set", "<builtin>.__import__", "<builtin>.AssertionError"], "torch": ["torch._C.default_generator.manual_seed", "torch._C._cuda_getDeviceCount", "torch._C._cuda_isDriverSufficient", "torch._C._cuda_getDevice", "torch._C._cuda_init", "torch._C._cuda_getDriverVersion"], "math": ["math.sqrt"], "difflib": ["difflib.unified_diff"], "contextlib": ["contextlib.closing"], "tarfile": ["tarfile.open"], "struct": ["struct.unpack", "struct.pack"], "io": ["io.BytesIO"], "urllib2": ["urllib2.urlopen"], "tempfile": ["tempfile.NamedTemporaryFile", "tempfile.mkdtemp"], "shutil": ["shutil.move", "shutil.rmtree"], "hashlib": ["hashlib.sha256"], "tqdm": ["tqdm.tqdm", "tqdm.auto.tqdm"], "collections": ["collections.OrderedDict", "collections.defaultdict"], "traceback": ["traceback.format_stack"], "operator": ["operator.itemgetter"], "itertools": ["itertools.repeat"], "inspect": ["inspect.getsourcefile", "inspect.getsourcelines"], "platform": ["platform.system"], "ctypes": ["ctypes.cdll.LoadLibrary"], "subprocess": ["subprocess.Popen", "subprocess.Popen.communicate"]}