["torch.onnx.symbolic.cat", "torch.nn.parallel.parallel_apply.parallel_apply", "torch.cuda.random.manual_seed_all", "torch.serialization.save", "torch.nn.parallel.scatter_gather.gather", "torch.nn.parallel.data_parallel.DataParallel.__init__", "torch.nn.parallel.scatter_gather.scatter", "torch.onnx.symbolic.randn", "torch.cuda.__init__.set_device", "torch.random.manual_seed", "torch.cuda.__init__.empty_cache", "torch.nn.utils.clip_grad.clip_grad_norm_", "torch.optim.adam.Adam.__init__", "torch.nn.modules.container.ParameterList.__init__", "torch.nn.modules.conv.Conv2d.__init__", "torch.autograd.grad_mode.no_grad.__default_init__", "torch.nn.modules.pooling.AvgPool2d.__init__", "torch.nn.modules.pooling.MaxPool2d.__default_init__", "torch.nn.modules.loss.CrossEntropyLoss.__init__", "torch.cuda.__init__.device_count", "torch.nn.modules.linear.Linear.__init__", "torch.nn.modules.pooling.AdaptiveAvgPool2d.__default_init__", "torch.nn.modules.activation.ReLU.__init__", "torch.onnx.symbolic.topk", "torch.nn.modules.batchnorm.BatchNorm2d.__default_init__", "torch.utils.data.dataloader.DataLoader.__init__", "torch.nn.parallel.replicate.replicate", "torch.autograd.__init__.grad", "torch.nn.modules.container.ModuleList.__init__", "torch.nn.modules.container.Sequential.__init__", "torch.autograd.function.BackwardCFunction.__default_init__", "torch.autograd.function.BackwardCFunction.apply", "torch.nn.modules.module.Module.__init__", "torch.nn.modules.module.Module.apply", "torch.nn.utils.spectral_norm.SpectralNorm.__init__", "torch.nn.utils.spectral_norm.SpectralNorm.apply", "torch.nn.utils.weight_norm.WeightNorm.__init__", "torch.nn.utils.weight_norm.WeightNorm.apply", "torch.nn.parameter.Parameter.__new__", "torch.cuda.__init__.device.__init__", "torch.optim.sgd.SGD.__init__"]