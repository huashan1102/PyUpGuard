{"seaborn.matrix.heatmap": ["seaborn.matrix._HeatMapper.__init__", "matplotlib.pyplot.gca", "seaborn.matrix._HeatMapper.plot"], "seaborn.matrix._HeatMapper.__init__": ["<builtin>.isinstance", "numpy.asarray", "pandas.DataFrame", "seaborn.matrix._matrix_mask", "numpy.ma.masked_where", "seaborn.matrix._index_to_ticklabels", "<builtin>.len", "seaborn.matrix._HeatMapper._skip_ticks", "seaborn.matrix._index_to_label", "seaborn.matrix._HeatMapper._determine_cmap_params", "<builtin>.ValueError"], "seaborn.matrix._HeatMapper.plot": ["seaborn.utils.despine", "<builtin>.isinstance", "seaborn.matrix._HeatMapper._auto_ticks", "matplotlib.pyplot.setp", "seaborn.utils._draw_figure", "seaborn.utils.axis_ticklabels_overlap", "seaborn.matrix._HeatMapper._annotate_heatmap"], "seaborn.matrix._matrix_mask": ["numpy.zeros", "<builtin>.isinstance", "pandas.DataFrame", "<builtin>.ValueError", "pandas.isnull"], "seaborn.matrix._index_to_ticklabels": ["<builtin>.isinstance", "<builtin>.map"], "seaborn.matrix._HeatMapper._skip_ticks": ["<builtin>.len", "numpy.arange"], "seaborn.matrix._index_to_label": ["<builtin>.isinstance", "<builtin>.map"], "seaborn.matrix._HeatMapper._determine_cmap_params": ["numpy.nanpercentile", "numpy.nanmin", "numpy.nanmax", "<builtin>.isinstance", "seaborn._compat.get_colormap", "matplotlib.colors.ListedColormap", "<builtin>.max", "matplotlib.colors.Normalize", "numpy.linspace", "numpy.ma.masked_invalid"], "seaborn.utils.despine": ["matplotlib.pyplot.gcf", "<builtin>.any", "numpy.asarray", "<builtin>.locals", "numpy.compress", "<builtin>.min", "<builtin>.max"], "seaborn.matrix._HeatMapper._auto_ticks": ["<builtin>.int", "<builtin>.len", "seaborn.matrix._HeatMapper._skip_ticks"], "seaborn.utils.axis_ticklabels_overlap": ["<builtin>.max"], "seaborn.matrix._HeatMapper._annotate_heatmap": ["numpy.meshgrid", "numpy.arange", "<builtin>.zip", "seaborn.utils.relative_luminance", "<builtin>.dict"], "seaborn._compat.get_colormap": ["matplotlib.cm.get_cmap"], "seaborn.utils.relative_luminance": ["matplotlib.colors.colorConverter.to_rgba_array", "numpy.where"]}